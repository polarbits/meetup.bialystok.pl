'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _data = require('./data');

var _data2 = _interopRequireDefault(_data);

var _users = require('./users');

var _users2 = _interopRequireDefault(_users);

var _account = require('./account');

var _account2 = _interopRequireDefault(_account);

var _instance = require('./instance');

var _instance2 = _interopRequireDefault(_instance);

var _event = require('./event');

var _event2 = _interopRequireDefault(_event);

var _endpoint = require('./endpoint');

var _endpoint2 = _interopRequireDefault(_endpoint);

var _socket = require('./socket');

var _socket2 = _interopRequireDefault(_socket);

var _trace = require('./trace');

var _trace2 = _interopRequireDefault(_trace);

var _hosting = require('./hosting');

var _hosting2 = _interopRequireDefault(_hosting);

var _response = require('./response');

var _response2 = _interopRequireDefault(_response);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var _channel = require('./channel');

var _channel2 = _interopRequireDefault(_channel);

var _class = require('./class');

var _class2 = _interopRequireDefault(_class);

var _settings = require('./settings');

var _settings2 = _interopRequireDefault(_settings);

var _registry = require('./registry');

var _registry2 = _interopRequireDefault(_registry);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class Server {
  constructor(ctx = {}) {
    const settings = (0, _settings2.default)(ctx);
    const getConfig = className => Object.assign({ className }, settings);
    const config = getConfig();

    this._class = new _class2.default(config);
    this.event = new _event2.default(config);
    this.endpoint = new _endpoint2.default(config);
    this.channel = new _channel2.default(config);
    this.socket = new _socket2.default(config);
    this.trace = new _trace2.default(config);
    this.hosting = new _hosting2.default(config);
    this.response = (0, _response2.default)(config);
    this.account = new _account2.default(config);
    this.instance = new _instance2.default(config);
    this.logger = (0, _logger2.default)(config);
    this.users = new _users2.default(config);
    this.registry = new _registry2.default(config);
    this.data = new Proxy(new _data2.default(settings), {
      get(target, className) {
        return new _data2.default(getConfig(className));
      }
    });
  }
}

exports.default = Server;
module.exports = exports['default'];