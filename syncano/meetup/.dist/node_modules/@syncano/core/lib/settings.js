'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

global.META = global.META || {};

exports.default = (_ref) => {
  let {
    meta = {},
    token,
    socket,
    instanceName,
    setResponse,
    HttpResponse
  } = _ref,
      props = _objectWithoutProperties(_ref, ['meta', 'token', 'socket', 'instanceName', 'setResponse', 'HttpResponse']);

  return _extends({
    token: token || process.env.SYNCANO_API_KEY || global.META.token || meta.token,
    instanceName: instanceName || process.env.SYNCANO_INSTANCE_NAME || global.META.instance || meta.instance,
    host: process.env.SYNCANO_HOST || global.META.api_host || meta.api_host || 'api.syncano.io',
    spaceHost: process.env.SPACE_HOST || global.META.space_host || meta.space_host || 'syncano.space',
    apiVersion: 'v2',
    socket: socket || global.META.socket || meta.socket,
    meta,
    setResponse,
    HttpResponse
  }, props);
};

module.exports = exports['default'];