{"version":3,"sources":["../src/cli-hosting.js"],"names":["setup","session","load","command","group","description","option","action","options","isAuthenticated","hasProject","HostingAdd","run","checkConnection","HostingDelete","HostingList","HostingFilesCmd","HostingSync","HostingConfig","on","commandsArr","process","argv","slice","length","outputHelp","parse"],"mappings":"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","file":"cli-hosting.js","sourcesContent":["\nimport program from './program'\nimport commands from './commands'\nimport session from './utils/session'\nimport context from './utils/context'\nimport validateCommands from './utils/validate-commands'\nimport { echo } from './utils/print-tools'\n\nconst setup = async () => {\n  await context.session.load()\n\n  program\n    .command('add <path>')\n    .group('Hosting')\n    .description('Create a new hosting')\n    .option('-c, --cname <cname>', 'CNAME')\n    .action(async (...options) => {\n      session.isAuthenticated()\n      session.hasProject()\n      echo()\n      new commands.HostingAdd(context).run(options)\n    })\n\n  program\n    .command('delete <name>')\n    .group('Hosting')\n    .description('Delete a hosting')\n    .option('-h, --help <topic>', 'Hosting name')\n    .action(async (...options) => {\n      session.isAuthenticated()\n      session.hasProject()\n      await session.checkConnection()\n      echo()\n      new commands.HostingDelete(context).run(options)\n    })\n\n  program\n    .command('list')\n    .group('Hosting')\n    .description('List hostings')\n    .action(async (...options) => {\n      session.isAuthenticated()\n      session.hasProject()\n      await session.checkConnection()\n      new commands.HostingList(context).run(options)\n    })\n\n  program\n    .command('files <name>')\n    .group('Hosting')\n    .description('List hosting files')\n    .action(async (...options) => {\n      session.isAuthenticated()\n      session.hasProject()\n      await session.checkConnection()\n      echo()\n      new commands.HostingFilesCmd(context).run(options)\n    })\n\n  program\n    .command('sync <name>')\n    .group('Hosting')\n    .description('Publish your local hosting files')\n    .option('-s, --socket <name>', 'socket')\n    .action(async (...options) => {\n      session.isAuthenticated()\n      session.hasProject()\n      await session.checkConnection()\n      echo()\n      new commands.HostingSync(context).run(options)\n    })\n\n  program\n    .command('config <name>')\n    .group('Hosting')\n    .description('Configure hosting parameters')\n    .option('-c, --cname <domain_name>', 'add CNAME to hosting')\n    .option('-d, --remove-cname <domain_name>', 'remove CNAME from hosting')\n    .option('-b, --browser_router', 'turn on BrowserRouter support')\n    .action(async (...options) => {\n      session.isAuthenticated()\n      session.hasProject()\n      await session.checkConnection()\n      echo()\n      new commands.HostingConfig(context).run(options)\n    })\n\n  program\n    .on('*', (commandsArr) => validateCommands(commandsArr))\n\n  if (!process.argv.slice(2).length) {\n    program.outputHelp()\n  }\n\n  program.parse(process.argv)\n}\n\nsetup()\n"]}