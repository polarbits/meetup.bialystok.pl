{"version":3,"sources":["../../src/commands/hosting-delete.js"],"names":["HostingDelete","constructor","context","session","Hosting","getQuestions","hostingName","questions","type","name","message","red","default","run","cmd","resp","prompt","delete","process","exit","hosting","get","existLocally","cyan","deletedHosting","green","err"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;;;AAEe,MAAMA,aAAN,CAAoB;AACjCC,cAAaC,OAAb,EAAsB;AACpB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAeD,QAAQC,OAAvB;AACA,SAAKC,OAAL,GAAeF,QAAQE,OAAvB;AACD;;AAED,SAAOC,YAAP,CAAqBC,WAArB,EAAkC;AAChC,UAAMC,YAAY,CAChB;AACEC,YAAM,SADR;AAEEC,YAAM,QAFR;AAGEC,eAAS,mBAAE,CAAF,EAAM,oCAAmC,gBAAOC,GAAP,CAAWL,WAAX,CAAwB,EAAjE,CAHX;AAIEM,eAAS;AAJX,KADgB,CAAlB;;AASA,WAAOL,SAAP;AACD;;AAEKM,KAAN,CAAW,CAACP,WAAD,EAAcQ,GAAd,CAAX,EAA+B;AAAA;;AAAA;AAC7B,YAAKA,GAAL,GAAWA,GAAX;AACA,YAAMC,OAAO,MAAM,mBAASC,MAAT,CAAgBhB,cAAcK,YAAd,CAA2BC,WAA3B,CAAhB,CAAnB;AACA,UAAI,CAACS,KAAKE,MAAV,EAAkB;AAChB;AACAC,gBAAQC,IAAR,CAAa,CAAb;AACD;;AAED,YAAMC,UAAU,MAAM,MAAKhB,OAAL,CAAaiB,GAAb,CAAiBf,WAAjB,CAAtB;AACA,UAAI,CAACc,QAAQE,YAAb,EAA2B;AACzB,iCAAQ,mBAAE,CAAF,EAAM,mCAAkC,gBAAOC,IAAP,CAAYjB,WAAZ,CAAyB,GAAjE,CAAR;AACA;AACAY,gBAAQC,IAAR,CAAa,CAAb;AACD;;AAED,UAAI;AACF,cAAMK,iBAAiB,MAAMJ,QAAQH,MAAR,EAA7B;AACA,8BAAK,CAAL,EAAS,WAAU,gBAAOM,IAAP,CAAYC,eAAef,IAA3B,CAAiC,aAAY,gBAAOgB,KAAP,CAAa,cAAb,CAA6B,WAA7F;AACA;AACD,OAJD,CAIE,OAAOC,GAAP,EAAY;AACZ,+BAAM,0BAAN;AACD;AArB4B;AAsB9B;AA1CgC;kBAAd1B,a","file":"hosting-delete.js","sourcesContent":["import inquirer from 'inquirer'\nimport format from 'chalk'\n\nimport { echo, p, warning, error } from '../utils/print-tools'\n\nexport default class HostingDelete {\n  constructor (context) {\n    this.context = context\n    this.session = context.session\n    this.Hosting = context.Hosting\n  }\n\n  static getQuestions (hostingName) {\n    const questions = [\n      {\n        type: 'confirm',\n        name: 'delete',\n        message: p(2)(`Are you sure you want to remove: ${format.red(hostingName)}`),\n        default: false\n      }\n    ]\n\n    return questions\n  }\n\n  async run ([hostingName, cmd]) {\n    this.cmd = cmd\n    const resp = await inquirer.prompt(HostingDelete.getQuestions(hostingName))\n    if (!resp.delete) {\n      echo()\n      process.exit(0)\n    }\n\n    const hosting = await this.Hosting.get(hostingName)\n    if (!hosting.existLocally) {\n      warning(p(4)(`Couldn't find any hosting named ${format.cyan(hostingName)}!`))\n      echo()\n      process.exit(1)\n    }\n\n    try {\n      const deletedHosting = await hosting.delete()\n      echo(4)(`Hosting ${format.cyan(deletedHosting.name)} has been ${format.green('successfully')} deleted!`)\n      echo()\n    } catch (err) {\n      error('Deleting hosting failed!')\n    }\n  }\n}\n"]}