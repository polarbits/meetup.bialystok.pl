{"version":3,"sources":["../../src/commands/socket-config-show.js"],"names":["SocketConfigShowCmd","constructor","context","session","Socket","run","socketName","cmd","socket","get","existRemotely","process","exit","spec","config","Object","keys","forEach","optionName","params","required","dim","currentValue","remote","bold","description"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEe,MAAMA,mBAAN,CAA0B;AACvCC,cAAaC,OAAb,EAAsB;AACpB,SAAKC,OAAL,GAAeD,QAAQC,OAAvB;AACA,SAAKC,MAAL,GAAcF,QAAQE,MAAtB;AACD;;AAEKC,KAAN,CAAW,CAACC,UAAD,EAAaC,GAAb,CAAX,EAA8B;AAAA;;AAAA;AAC5B,YAAKC,MAAL,GAAc,MAAM,MAAKJ,MAAL,CAAYK,GAAZ,CAAgBH,UAAhB,CAApB;;AAEA,UAAI,CAAC,MAAKE,MAAL,CAAYE,aAAjB,EAAgC;AAC9B,+BAAM,CAAN,EAAS,6BAAT;AACA;AACAC,gBAAQC,IAAR,CAAa,CAAb;AACD;;AAED,UAAI,MAAKJ,MAAL,CAAYK,IAAZ,CAAiBC,MAArB,EAA6B;AAC3BC,eAAOC,IAAP,CAAY,MAAKR,MAAL,CAAYK,IAAZ,CAAiBC,MAA7B,EAAqCG,OAArC,CAA6C,UAACC,UAAD,EAAgB;AAC3D,gBAAMC,SAAS,MAAKX,MAAL,CAAYK,IAAZ,CAAiBC,MAAjB,CAAwBI,UAAxB,CAAf;AACA,gBAAME,WAAWD,OAAOC,QAAP,GAAkB,gBAAOC,GAAP,CAAW,YAAX,CAAlB,GAA6C,EAA9D;AACA,gBAAMC,eAAe,MAAKd,MAAL,CAAYe,MAAZ,CAAmBT,MAAnB,CAA0BI,UAA1B,CAArB;;AAEA,gCAAK,gBAAOG,GAAP,CAAW,gBAAX,CAAL,EAAoC,GAAE,gBAAOG,IAAP,CAAYN,UAAZ,CAAwB,IAAGE,QAAS,EAA1E;AACA,gCAAK,gBAAOC,GAAP,CAAW,gBAAX,CAAL,EAAmCF,OAAOM,WAA1C;AACA,gCAAK,gBAAOJ,GAAP,CAAW,gBAAX,CAAL,EAAmCC,YAAnC;AACA;AACD,SATD;AAUD,OAXD,MAWO;AACL,8BAAK,CAAL,EAAQ,+CAAR;AACA;AACAX,gBAAQC,IAAR,CAAa,CAAb;AACD;AAxB2B;AAyB7B;AA/BsC;kBAApBZ,mB","file":"socket-config-show.js","sourcesContent":["import format from 'chalk'\nimport { echo, error } from '../utils/print-tools'\n\nexport default class SocketConfigShowCmd {\n  constructor (context) {\n    this.session = context.session\n    this.Socket = context.Socket\n  }\n\n  async run ([socketName, cmd]) {\n    this.socket = await this.Socket.get(socketName)\n\n    if (!this.socket.existRemotely) {\n      error(4)('That socket was not synced!')\n      echo()\n      process.exit(1)\n    }\n\n    if (this.socket.spec.config) {\n      Object.keys(this.socket.spec.config).forEach((optionName) => {\n        const params = this.socket.spec.config[optionName]\n        const required = params.required ? format.dim('(required)') : ''\n        const currentValue = this.socket.remote.config[optionName]\n\n        echo(format.dim('         name:'), `${format.bold(optionName)} ${required}`)\n        echo(format.dim('  description:'), params.description)\n        echo(format.dim('        value:'), currentValue)\n        echo()\n      })\n    } else {\n      echo(4)('This Socket doesn\\'t have any config options.')\n      echo()\n      process.exit(0)\n    }\n  }\n}\n"]}