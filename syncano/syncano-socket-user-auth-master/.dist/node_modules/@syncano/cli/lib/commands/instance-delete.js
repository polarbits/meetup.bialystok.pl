'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _debug = require('../utils/debug');

var _debug2 = _interopRequireDefault(_debug);

var _printTools = require('../utils/print-tools');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

const { debug } = (0, _debug2.default)('cmd-instance-create');

class InstanceCreateCmd {
  constructor(context) {
    debug('InstanceCreateCmd.constructor');
    this.context = context;
    this.session = context.session;
    this.Init = context.Init;
  }

  run([instanceName]) {
    var _this = this;

    return _asyncToGenerator(function* () {
      try {
        yield _this.session.deleteInstance(instanceName);
        (0, _printTools.echo)();
        (0, _printTools.echo)(4)('Instance was deleted successfully!');
        (0, _printTools.echo)();
      } catch (err) {
        (0, _printTools.error)('Deleting instance failed!');
      }
    })();
  }
}
exports.default = InstanceCreateCmd;
module.exports = exports['default'];
//# sourceMappingURL=instance-delete.js.map