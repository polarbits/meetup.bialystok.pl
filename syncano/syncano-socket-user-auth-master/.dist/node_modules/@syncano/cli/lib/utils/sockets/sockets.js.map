{"version":3,"sources":["../../../src/utils/sockets/sockets.js"],"names":["debug","MetadataObject","constructor","name","metadata","socketName","existRemotely","existLocally","isProjectRegistryDependency","getStatus","status","type","Endpoint","call","params","request","url","getURL","method","timeout","transformResponse","data","getFullName","getSpaceHost","Handler","Event","Component","componentPath","join","Socket","getLocal","socketPath","path","packageName","getRealName","JSON","parse","readFileSync","linkWithProject","projectPath","spawnSync","cwd","maxBuffer","stdio","process","isComponentFile","filePath","includes","build","resolve","reject","command","args","env","FORCE_COLOR","out","split","stderr","toString","settings","loaded","findLocalPath","getSocketSettings","dependencies","dependencyOf","remote","spec","endpoints","event_handlers","events","components","loadLocal","isDependencySocket","getBuildPath","getTemplatesChoices","add","registrySocket","project","installSocket","install","config","socketFolder","sync","getSocket","fileName","createReadStream","pipe","Extract","on","newSocket","updateSocketNPMDeps","loadRemote","updateStatus","update","err","uninstall","socket","uninstallSocket","localPath","uninstallLocal","uninstallRemote","Error","deleteFolderRecursive","connection","delete","listRemote","list","listDeps","Object","keys","getDependSockets","localSocketsList","listLocal","concat","all","map","get","flatList","sockets","addToList","duplicated","find","s","push","forEach","dep","allSockets","loadedSocket","getDepsRegistrySockets","loadFromRegistry","create","templateName","newSocketPath","init","publish","version","registry","publishSocket","getSocketPath","existsSync","templateFolder","normalize","files","nodir","file","oldContent","socketDescription","newContent","partial","fileToSave","replace","dir","writeFileSync","verify","getSrcFolder","getFullConfig","getFull","getRemote","getRemoteSpec","load","setRemoteState","environment","updatedAt","updated_at","installed","statusInfo","status_info","searchSocketByName","baseDir","getDependSocket","isSocketFile","fileFullPath","getRawStatus","msg","error","getType","getVersion","getScripts","sep","getCompiledScriptsFolder","folder","getSocketZip","getDistPath","getSocketEnvZip","getSocketNodeModulesChecksum","getSocketConfigFile","composeFromSpec","objectType","ObjectClass","objects","assign","objectName","objectMetadata","object","composeComponentsFromSpec","getEndpoints","getEndpoint","endpointName","getEventHandlers","getEvents","getEndpointTrace","traceId","trace","getEndpointTraces","lastId","traces","filteredTraces","id","getTraces","getHost","instance","account","getAuthKey","getEndpointTraceByUrl","resp","headers","getComponents","createZip","plainSources","numberOfFiles","allFilesList","archive","zlib","level","output","createWriteStream","mode","fileFilter","remoteFiles","fullPath","match","remoteFile","checksum","findFiles","root","bind","localYMLChecksum","getSocketYMLFile","remoteYMLChecksum","fileNameWithPath","scripts","getScriptsInSocket","script","scriptNameWithPath","srcFile","scriptBundlePath","compiledFile","scriptLocalChecksum","scriptRemoteChecksum","finalize","createPackageZip","directory","createEnvZip","envFolder","updateEnvCall","form","endpointPath","append","stringify","submit","protocol","host","res","statusCode","message","updateEnv","socketEnvShouldBeUpdated","postSocketZip","zipCallback","patchSocketZip","isConfigSynced","sources","getSocketSrcChecksum","responseData","responseCode","compile","isEqual","updateConfig","optionName","envValue","getConfigOptionFromEnv","waitForStatusInfo","setTimeout","addHosting","hostingName","save","getHosting","listHostings","deleteHosting","getScriptObject","fileWithLocalPath","getScriptsToCompile","filesToCompile","fileNameWithLocalPath","localSrcChecksum","remoteSrcChecksum","getFileForEndpoint","startsWith","getSourceMapPath","base","getOrigFileLine","traceData","smc","SourceMapConsumer","encoding","originalPositionFor","line","lineNumber","column","columnNumber","getPrettyTrace","origFileLine","origFilePath","getOrigFilePath","lines","getConfigOptions","toUpperCase","getConfigOptionsToAsk","options","option","required","bumpVersion","bumpType","nextVersion","isCompatible","submitSocket","getDeps","getDependencies","getDeepDeps","deps","socketToAdd","dependencyName","isEmpty","arr","depsObjects","flatten","createdSocket","addDependency","socketFromRegistry","socketVersion","checksums","fileReltivePath","socketMajorVersion","majorVersion","shouldBeUpdated","some","endsWith","remoteChecksum","localChecksum"],"mappings":"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","file":"sockets.js","sourcesContent":["import fs from 'fs'\nimport klawSync from 'klaw-sync'\nimport child from 'child_process'\nimport FindKey from 'find-key'\nimport md5 from 'md5'\nimport hashdirectory from 'hashdirectory'\nimport unzip from 'unzip2'\nimport YAML from 'js-yaml'\nimport axios from 'axios'\nimport readdirp from 'readdirp'\nimport mkdirp from 'mkdirp'\nimport path from 'path'\nimport FormData from 'form-data'\nimport archiver from 'archiver'\nimport Promise from 'bluebird'\nimport template from 'es6-template-strings'\nimport _ from 'lodash'\nimport SourceMap from 'source-map'\nimport WebSocket from 'ws'\n\nimport logger from '../debug'\nimport session from '../session'\nimport utils from './utils'\nimport Hosting from '../hosting'\nimport Registry from '../registry'\nimport { p, echo } from '../print-tools'\nimport { getTemplate } from '../templates'\nimport { CompileError, CompatibilityError } from '../errors'\n\nconst { debug } = logger('utils-sockets')\n\nclass MetadataObject {\n  constructor (name, metadata, socketName) {\n    this.name = name\n    this.metadata = metadata\n    this.socketName = socketName\n    this.existRemotely = null\n    this.existLocally = null\n    this.isProjectRegistryDependency = null\n  }\n  getStatus () {\n    if (this.existLocally && this.existRemotely) {\n      return { status: 'synced', type: 'ok' }\n    }\n\n    if (this.existLocally && !this.existRemotely) {\n      return { status: 'not synced', type: 'warn' }\n    }\n\n    if (!this.existLocally && this.existRemotely) {\n      return { status: 'no local configuration', type: 'fail' }\n    }\n  }\n}\n\nclass Endpoint extends MetadataObject {\n  call (params) {\n    return axios.request({\n      url: this.getURL(),\n      method: 'POST',\n      timeout: 3000,\n      params,\n      // Do not transform data automaticaly\n      transformResponse: (data) => data\n    })\n  }\n\n  getFullName () {\n    return `${this.socketName}/${this.name}`\n  }\n\n  getURL () {\n    return `https://${session.getSpaceHost()}/${this.socketName}/${this.name}/`\n  }\n}\n\nclass Handler extends MetadataObject {}\n\nclass Event extends MetadataObject {}\n\nclass Component extends MetadataObject {\n  constructor (name, metadata, socketName) {\n    super(name, metadata, socketName)\n    this.componentPath = path.join(Socket.getLocal(this.socketName).socketPath, this.metadata.path)\n    this.packageName = this.getRealName()\n  }\n  getRealName () {\n    debug('getRealComponentName')\n    return JSON.parse(fs.readFileSync(path.join(this.componentPath, 'package.json'))).name\n  }\n\n  linkWithProject (projectPath) {\n    debug('linkWithProject')\n    child.spawnSync(\n      'yarn',\n      ['link'],\n      {\n        cwd: this.componentPath,\n        maxBuffer: 2048 * 1024,\n        stdio: [process.stdio, 'pipe', 'pipe']\n      }\n    )\n    child.spawnSync(\n      'yarn',\n      ['link', this.packageName],\n      {\n        cwd: projectPath,\n        maxBuffer: 2048 * 1024,\n        stdio: [process.stdio, 'pipe', 'pipe']\n      }\n    )\n  }\n\n  isComponentFile (filePath) {\n    return filePath.includes(path.join(this.componentPath, 'src'))\n  }\n\n  build () {\n    debug(`component build: ${this.packageName}`)\n\n    return new Promise(async (resolve, reject) => {\n      const command = 'npm'\n      const args = 'run build -s'\n\n      process.env.FORCE_COLOR = true\n      const out = child.spawnSync(\n        command,\n        args.split(' '),\n        {\n          cwd: this.componentPath,\n          maxBuffer: 2048 * 1024,\n          stdio: [process.stdio, 'pipe', 'pipe']\n        }\n      )\n\n      if (out.status !== 0) {\n        reject(new CompileError(out.stderr.toString()))\n      } else {\n        resolve()\n      }\n    })\n  }\n}\n\nclass Socket {\n  constructor (socketName, socketPath) {\n    debug('Sockets.constructor', socketName)\n    this.name = socketName\n    this.settings = { loaded: false }\n    this.socketPath = socketPath || utils.findLocalPath(socketName)\n\n    if (this.socketPath) {\n      this.settings = session.settings.getSocketSettings(this.socketPath, this.name)\n    }\n\n    this.existRemotely = null\n    this.existLocally = null\n    this.isProjectRegistryDependency = null\n    this.dependencies = []\n    this.dependencyOf = []\n\n    // that looks stupid\n    this.remote = {\n      spec: {\n        endpoints: {},\n        event_handlers: {},\n        events: {},\n        components: {}\n      },\n      metadata: {}\n    }\n\n    this.spec = {\n      spec: {\n        endpoints: {},\n        event_handlers: {},\n        events: {},\n        components: {}\n      }\n    }\n\n    this.loadLocal()\n\n    // SocketPath for non-local sockets\n    if (this.isDependencySocket || this.isProjectRegistryDependency) {\n      this.socketPath = path.join(session.getBuildPath(), this.name)\n    }\n  }\n\n  static getTemplatesChoices () {\n    return utils.getTemplatesChoices()\n  }\n\n  // Install / Uninstall\n  static add (registrySocket) {\n    debug('add()')\n    session.settings.project.installSocket(registrySocket)\n  }\n\n  // Install / Uninstall\n  static async install (registrySocket, config) {\n    debug('install()')\n\n    const socketName = registrySocket.name\n    session.settings.project.installSocket(registrySocket)\n\n    const socketFolder = path.join(session.getBuildPath(), socketName)\n    mkdirp.sync(socketFolder)\n\n    debug('Getting socket from registry')\n    await Registry.getSocket(registrySocket, config)\n\n    debug('Registry socket:', registrySocket)\n    const fileName = path.join(session.getBuildPath(), `${socketName}.zip`)\n\n    return new Promise((resolve, reject) => {\n      fs.createReadStream(fileName)\n        .pipe(unzip.Extract({ path: socketFolder }))\n        .on('close', async () => {\n          debug('Unzip finished')\n          try {\n            const newSocket = new Socket(socketName, socketFolder)\n            await Socket.updateSocketNPMDeps(socketFolder)\n            await newSocket.loadRemote()\n\n            const updateStatus = await newSocket.update({ config })\n            debug('updateStatus', updateStatus)\n            newSocket.updateStatus = updateStatus\n            resolve(newSocket)\n          } catch (err) {\n            reject(err)\n          }\n        })\n    })\n  }\n\n  static uninstall (socket = {}) {\n    debug('uninstall', socket.name)\n\n    if (socket.isProjectRegistryDependency) {\n      session.settings.project.uninstallSocket(socket.name)\n    }\n\n    if (socket.existLocally && socket.localPath) {\n      Socket.uninstallLocal(socket)\n      if (socket.existRemotely) {\n        this.uninstallRemote(socket.name)\n      }\n      return Promise.resolve()\n    }\n\n    if (socket.existRemotely) {\n      return this.uninstallRemote(socket.name)\n    }\n\n    return Promise.reject(new Error('Socket with given doesn\\'t exist!'))\n  }\n\n  static uninstallLocal (socket) {\n    utils.deleteFolderRecursive(socket.localPath)\n  }\n\n  // TODO: check if the socket is installed (it may be not yet installed yet (before sync))\n  static async uninstallRemote (socketName) {\n    debug('uninstallRemote', socketName)\n    return session.connection.socket.delete(socketName)\n  }\n\n  // list sockets based on call to Syncano (sockets are installed on Synano)\n  static listRemote () {\n    debug('listRemote()')\n    return session.connection.socket.list()\n  }\n\n  static listDeps () {\n    // List project dependencies\n    return Object.keys(session.settings.project.getDependSockets())\n  }\n\n  // list all sockets (mix of locally definde and installed on server)\n  static async list () {\n    debug('list()')\n    // Local Socket defined in folders and in project deps\n    const localSocketsList = utils.listLocal().concat(Socket.listDeps())\n    return Promise.all(localSocketsList.map((socketName) => Socket.get(socketName)))\n  }\n\n  static async flatList (socketName) {\n    debug('flatList()')\n    const sockets = []\n\n    const addToList = (socket) => {\n      const duplicated = _.find(sockets, (s) => s.name === socket.name)\n      if (duplicated) {\n        if (!_.includes(duplicated.dependencyOf, socket.name)) {\n          duplicated.dependencyOf.concat(socket.dependencyOf)\n        }\n      } else {\n        sockets.push(socket)\n        socket.dependencies.forEach((dep) => {\n          addToList(dep)\n        })\n      }\n    }\n\n    if (socketName) {\n      const socket = await Socket.get(socketName)\n      addToList(socket)\n      return sockets\n    }\n\n    // All Sockets\n    const allSockets = await Socket.list()\n    allSockets.forEach((socket) => {\n      addToList(socket)\n    })\n    return sockets\n  }\n\n  // Creating Socket simple object\n  static getLocal (socketName) {\n    debug('getLocal')\n    return new Socket(socketName)\n  }\n\n  static async get (socketName) {\n    debug(`Getting Socket: ${socketName}`)\n    const socket = Socket.getLocal(socketName)\n    const loadedSocket = await socket.loadRemote()\n    await loadedSocket.getDepsRegistrySockets()\n\n    if (!socket.existLocally) {\n      await socket.loadFromRegistry()\n    }\n    return socket\n  }\n\n  static create (socketName, templateName) {\n    debug('create socket', socketName, templateName)\n    const newSocketPath = path.join(session.projectPath, socketName)\n    const socket = new Socket(socketName, newSocketPath)\n    if (socket.existLocally) {\n      return Promise.reject(new Error('Socket with given name already exist!'))\n    }\n    return socket.init(templateName)\n  }\n\n  static publish (socketName, version) {\n    debug('publish')\n    const registry = new Registry()\n    return registry.publishSocket(socketName, version)\n  }\n\n  init (templateName) {\n    debug('init', templateName)\n    return new Promise((resolve, reject) => {\n      const socketPath = this.getSocketPath()\n      if (!fs.existsSync(socketPath)) {\n        mkdirp.sync(socketPath)\n      }\n\n      try {\n        const templateFolder = path.normalize(getTemplate(templateName))\n        const files = klawSync(templateFolder, {nodir: true})\n        files.forEach(file => {\n          const oldContent = fs.readFileSync(file.path, 'utf8')\n          const socket = {\n            socketName: this.name,\n            socketDescription: `Description of ${this.name}`\n          }\n\n          const newContent = template(oldContent, socket, { partial: true })\n          const fileToSave = path.join(socketPath, file.path.replace(templateFolder, ''))\n\n          mkdirp.sync(path.parse(fileToSave).dir)\n          fs.writeFileSync(path.join(socketPath, file.path.replace(templateFolder, '')), newContent)\n        })\n        resolve(this)\n      } catch (err) {\n        return reject(err)\n      }\n    })\n  }\n\n  verify () {\n    return new Promise((resolve, reject) => {\n      if (!(this.isDependencySocket || this.isProjectRegistryDependency)) {\n        if (!fs.existsSync(this.getSrcFolder())) {\n          reject(new Error('No src folder!'))\n        }\n      }\n      resolve()\n    })\n  }\n\n  getFullConfig () {\n    return this.settings.getFull()\n  }\n\n  async getRemote () {\n    debug('getRemote', this.name)\n    try {\n      return await session.connection.socket.get(this.name)\n    } catch (err) {\n      return false\n    }\n  }\n\n  async getRemoteSpec () {\n    debug('getRemoteSpec')\n    if (this.remote.files['socket.yml']) {\n      try {\n        const spec = await axios.request({\n          url: this.remote.files['socket.yml'].file,\n          method: 'GET',\n          timeout: 3000\n        })\n        this.remote.spec = YAML.load(spec.data)\n      } catch (err) {}\n    }\n  }\n\n  setRemoteState (socket) {\n    this.existRemotely = true\n    this.remote.name = socket.name\n    this.remote.environment = socket.environment\n    this.remote.version = socket.version\n    this.remote.updatedAt = socket.updated_at\n    this.remote.installed = socket.installed\n    this.remote.files = socket.files\n    this.remote.status = socket.status\n    this.remote.statusInfo = socket.status_info\n    this.remote.config = socket.config\n    this.remote.metadata = socket.metadata\n  }\n\n  async loadRemote () {\n    debug('loadRemote()')\n    const socket = await this.getRemote()\n    if (socket) {\n      await this.setRemoteState(socket)\n      await this.getRemoteSpec()\n    } else {\n      this.existRemotely = false\n    }\n    return this\n  }\n\n  async loadFromRegistry () {\n    debug(`loadFromRegistry: ${this.name}`)\n    const registry = new Registry()\n    const registrySocket = await registry.searchSocketByName(this.name)\n\n    if (registrySocket.config) {\n      this.spec = registrySocket.config\n    }\n    this.url = registrySocket.url\n  }\n\n  loadLocal () {\n    debug('loadLocal()')\n    if (this.settings.loaded) {\n      this.existLocally = true\n      this.localPath = this.settings.baseDir\n      this.spec = this.settings.getFull()\n    } else if (_.includes(Socket.listDeps(), this.name)) {\n      this.isProjectRegistryDependency = true\n      this.existLocally = false\n      this.spec.version = session.settings.project.getDependSocket(this.name).version\n    }\n  }\n\n  isSocketFile (fileFullPath) {\n    debug('isSocketFile', fileFullPath)\n    return fileFullPath.includes(this.localPath)\n  }\n\n  getRawStatus () {\n    return {\n      isProjectRegistryDependency: this.isProjectRegistryDependency,\n      existRemotely: this.existRemotely,\n      existLocally: this.existLocally\n    }\n  }\n\n  getStatus () {\n    if (this.isProjectRegistryDependency && !this.existRemotely) {\n      return { status: 'not synced', type: 'warn' }\n    }\n\n    if (this.existLocally && !this.existRemotely) {\n      return { status: 'not synced', type: 'warn' }\n    }\n\n    let msg = this.remote.statusInfo || this.remote.status\n    if (msg && msg.error) {\n      msg = msg.error\n    }\n\n    if (this.remote.status === 'ok') {\n      return { status: msg, type: 'ok' }\n    } else if (this.remote.status === 'processing') {\n      return { status: msg, type: 'warn' }\n    }\n    return { status: msg, type: 'fail' }\n  }\n\n  getType () {\n    if (this.isProjectRegistryDependency) {\n      return { msg: 'project dependency', type: 'ok' }\n    }\n\n    if (this.isDependencySocket) {\n      return { msg: `dependency of ${this.dependencyOf.join(', ')}`, type: 'ok' }\n    }\n\n    if (this.existLocally) {\n      return { msg: 'local Socket', type: 'ok' }\n    }\n\n    return { msg: 'no local configuration', type: 'warn' }\n  }\n\n  getVersion () {\n    return this.remote ? this.remote.version : null\n  }\n\n  getScripts () {\n    return FindKey(this.spec, 'file')\n  }\n\n  getSrcFolder () {\n    return path.join(this.getSocketPath(), 'src', path.sep)\n  }\n\n  getCompiledScriptsFolder () {\n    const folder = path.join(this.getSocketPath(), '.dist', 'src', path.sep)\n    if (!fs.existsSync(folder)) {\n      mkdirp.sync(folder)\n    }\n    return folder\n  }\n\n  getSocketZip () {\n    debug('getSocketZip')\n    return path.join(session.getDistPath(), `${this.name}.zip`)\n  }\n\n  getSocketEnvZip () {\n    debug('getSocketEnvZip')\n    return path.join(session.getDistPath(), `${this.name}.env.zip`)\n  }\n\n  getSocketNodeModulesChecksum () {\n    debug('getSocketNodeModulesChecksum')\n    return hashdirectory.sync(path.join(this.socketPath, '.dist', 'node_modules'))\n  }\n\n  getSocketConfigFile () {\n    return path.join(session.projectPath, this.name, 'socket.yml')\n  }\n\n  composeFromSpec (objectType, ObjectClass) {\n    debug('composeFromSpec', objectType, ObjectClass)\n    const objects = Object.assign({}, this.remote.spec[objectType])\n    Object.assign(objects, this.spec[objectType])\n\n    debug('objects to process', objects)\n    return Object.keys(objects).map((objectName) => {\n      debug(`checking ${objectName}`)\n      const objectMetadata = objects[objectName]\n      debug('objectMetadata', objectMetadata)\n      const object = new ObjectClass(objectName, objectMetadata, this.name)\n\n      debug('existRemotely', this.remote.spec[objectType], objectName)\n      if (this.remote.spec[objectType][objectName]) {\n        debug(`existRemotely: ${true}`)\n        object.existRemotely = true\n      }\n\n      if (this.spec[objectType] && this.spec[objectType][objectName]) {\n        object.existLocally = true\n      }\n      return object\n    })\n  }\n\n  composeComponentsFromSpec (objectType, ObjectClass) {\n    debug('composeComponentsFromSpec', objectType, ObjectClass)\n    const objects = Object.assign({}, this.spec[objectType])\n    Object.assign(objects, this.spec[objectType])\n\n    debug('objects to process', objects)\n    return Object.keys(objects).map(objectName => {\n      debug(`checking ${objectName}`)\n      const objectMetadata = objects[objectName]\n      debug('objectMetadata', objectMetadata)\n      const object = new ObjectClass(objectName, objectMetadata, this.name)\n      return object\n    })\n  }\n\n  getEndpoints () {\n    debug('getEndpoints')\n    return this.composeFromSpec('endpoints', Endpoint)\n  }\n\n  getEndpoint (endpointName) {\n    debug('getEndpoints')\n    return _.find(this.getEndpoints(), { name: endpointName })\n  }\n\n  getEventHandlers () {\n    debug('getEventHandlers')\n    return this.composeFromSpec('event_handlers', Handler)\n  }\n\n  getEvents () {\n    debug('getEvents')\n    return this.composeFromSpec('events', Event)\n  }\n\n  getEndpointTrace (endpointName, traceId) {\n    return session.connection.trace.get(this.name, endpointName, traceId)\n  }\n\n  async getEndpointTraces (endpointName, lastId) {\n    debug('getEndpointTraces', endpointName, lastId)\n    try {\n      const traces = await session.connection.trace.get(this.name, endpointName)\n      if (!lastId) {\n        return traces\n      }\n      const filteredTraces = []\n      traces.forEach((trace) => {\n        if (trace.id > lastId) {\n          filteredTraces.push(trace)\n        }\n      })\n      return filteredTraces\n    } catch (err) {}\n  }\n\n  getTraces (lastId) {\n    const url = [\n      `https://${session.getHost()}/v2/instances/${session.project.instance}/channels/eventlog/poll/`,\n      '?transport=websocket',\n      `&api_key=${session.settings.account.getAuthKey()}`,\n      `&room=${`socket:${this.name}`}`\n    ].join('')\n\n    return new WebSocket(url)\n  }\n\n  static async getEndpointTraceByUrl (url) {\n    const resp = await axios.request({\n      url: `https://${session.getHost()}${url}`,\n      method: 'GET',\n      headers: {\n        'X-Api-Key': session.settings.account.getAuthKey()\n      }\n    })\n    return resp.data\n  }\n\n  async getComponents () {\n    debug('getComponents')\n    debug('getEndpoints')\n    return this.composeComponentsFromSpec('components', Component)\n  }\n\n  async createZip ({ plainSources = false } = {}) {\n    debug('createZip')\n    return new Promise((resolve, reject) => {\n      let numberOfFiles = 0\n      const allFilesList = []\n\n      const archive = archiver('zip', { zlib: { level: 9 } })\n      const output = fs.createWriteStream(this.getSocketZip(), { mode: 0o700 })\n\n      archive.pipe(output)\n      archive.on('error', reject)\n\n      function fileFilter (file) {\n        const remoteFiles = this.remote.files\n        if (file.fullPath.match(/yarn\\.lock/)) { return false }\n        if (file.fullPath.match(/.*\\.log$/)) { return false }\n        if (file.fullPath.match(/node_modules/)) { return false }\n        if (file.fullPath.match(/\\.js\\.map$/)) { return false }\n        if (!plainSources && file.fullPath.match(/\\.js$/)) { return false }\n        if (file.fullPath.match(/\\.js$/)) { return false }\n        if (file.path.match(/^\\./)) { return false }\n        debug(`createZip: Checking file ${file.name}`)\n        if (remoteFiles) {\n          const remoteFile = remoteFiles[file.path]\n          if (remoteFile) {\n            return remoteFile.checksum !== md5(fs.readFileSync(file.fullPath))\n          }\n          return true\n        }\n        return true\n      }\n\n      const findFiles = readdirp({ root: this.getSrcFolder(), fileFilter: fileFilter.bind(this) })\n\n      // Adding socket.yml if needed\n      const localYMLChecksum = md5(fs.readFileSync(this.getSocketYMLFile()))\n      const remoteYMLChecksum = this.remote.files && this.remote.files['socket.yml']\n        ? this.remote.files['socket.yml'].checksum\n        : ''\n      if (remoteYMLChecksum !== localYMLChecksum) {\n        debug('Adding file to archive: \\'socket.yml\\'')\n        archive.file(this.getSocketYMLFile(), { name: 'socket.yml' })\n        allFilesList.push('socket.yml')\n        numberOfFiles += 1\n      } else {\n        debug('Ignoring file: socket.yml')\n      }\n\n      // Adding all files (besides those filtered out)\n      findFiles.on('data', (file) => {\n        // with \"internal\" path\n        const fileNameWithPath = file.fullPath.replace(`${this.getSrcFolder()}`, '')\n        debug(`Adding file to archive: ${fileNameWithPath}`)\n        archive.file(file.fullPath, { name: fileNameWithPath })\n        allFilesList.push(fileNameWithPath)\n        numberOfFiles += 1\n      })\n\n      findFiles.on('end', async () => {\n        if (!plainSources) {\n          const scripts = await this.getScriptsInSocket()\n          scripts.forEach((script) => {\n            const scriptNameWithPath = script.srcFile.replace(`${this.getSrcFolder()}`, '')\n            const scriptBundlePath = script.compiledFile\n            const remoteFile = this.remote.files ? this.remote.files[scriptNameWithPath] : null\n\n            allFilesList.push(scriptNameWithPath)\n\n            if (remoteFile) {\n              if (!fs.existsSync(scriptBundlePath)) {\n                return\n              }\n              const scriptLocalChecksum = md5(fs.readFileSync(scriptBundlePath))\n              const scriptRemoteChecksum = remoteFile.checksum\n              if (scriptLocalChecksum === scriptRemoteChecksum) {\n                debug('Ignoring file:', scriptNameWithPath)\n                return\n              }\n            }\n\n            debug(`Adding file to archive: ${scriptNameWithPath}`)\n            archive.file(scriptBundlePath, { name: scriptNameWithPath })\n            numberOfFiles += 1\n          })\n          debug(`createZip: all files processed: ${numberOfFiles}`)\n        }\n        archive.finalize()\n      })\n\n      output.on('close', () => {\n        resolve({ numberOfFiles, allFilesList })\n      })\n    })\n  }\n\n  createPackageZip () {\n    debug('createPackageZip')\n    return new Promise((resolve, reject) => {\n      const archive = archiver('zip', { zlib: { level: 9 } })\n      const output = fs.createWriteStream(this.getSocketZip(), { mode: 0o700 })\n\n      archive.pipe(output)\n      archive.on('error', reject)\n\n      archive.file(this.getSocketYMLFile(), { name: 'socket.yml' })\n      archive.file(path.join(this.getSocketPath(), 'package.json'), { name: 'package.json' })\n      archive.directory(this.getSrcFolder(), 'src')\n      archive.directory(path.join(this.getSocketPath(), 'bin'), 'bin')\n      archive.finalize()\n\n      output.on('close', () => {\n        debug('package zip created:', this.getSocketZip())\n        resolve()\n      })\n    })\n  }\n\n  createEnvZip () {\n    debug('createEnvZip')\n    return new Promise((resolve, reject) => {\n      const output = fs.createWriteStream(this.getSocketEnvZip(), { mode: 0o700 })\n      const archive = archiver('zip', { zlib: { level: 9 } })\n\n      const envFolder = path.join(this.getSocketPath(), '.dist', 'node_modules')\n\n      if (!fs.existsSync(envFolder)) {\n        mkdirp.sync(envFolder)\n      }\n\n      archive.pipe(output)\n      archive.on('error', reject)\n\n      archive.directory(envFolder, 'node_modules')\n\n      archive.finalize()\n      output.on('close', () => {\n        resolve()\n      })\n    })\n  }\n\n  updateEnvCall (method) {\n    return new Promise((resolve, reject) => {\n      const form = new FormData()\n\n      let endpointPath = `/v2/instances/${session.project.instance}/environments/`\n      if (method === 'PATCH') {\n        endpointPath = `/v2/instances/${session.project.instance}/environments/${this.name}/`\n      }\n\n      debug('endpointPath', endpointPath)\n      form.append('name', this.name)\n      form.append('metadata', JSON.stringify({ checksum: this.getSocketNodeModulesChecksum() }))\n      form.append('zip_file', fs.createReadStream(this.getSocketEnvZip()))\n      debug('upload env zip')\n      form.submit({\n        method,\n        protocol: 'https:',\n        host: session.getHost(),\n        headers: {\n          'X-Api-Key': session.settings.account.getAuthKey()\n        },\n        path: endpointPath\n\n      }, (err, res) => {\n        debug('end env upload')\n        if (res.statusCode === 200) {\n          resolve()\n        }\n\n        if (res.statusCode === 413) {\n          debug('error while updating environment - environment is to big :(')\n          return reject(new Error('environment is to big'))\n        }\n\n        if (err || res.statusCode === 404) {\n          debug(`environment ${this.name} was not found`)\n          return reject(err || res)\n        }\n\n        res.on('data', (data) => {\n          const message = data.toString()\n\n          if (res.statusCode > 299) {\n            debug(`error while updating environment (${res.statusCode})`)\n            return reject(message)\n          }\n\n          debug(`environment ${this.name} was found`)\n          resolve(message)\n        })\n      })\n    })\n  }\n\n  async updateEnv () {\n    debug('updateEnv')\n    const resp = await this.socketEnvShouldBeUpdated()\n    if (resp) {\n      await this.createEnvZip()\n      return this.updateEnvCall(resp)\n    }\n    return 'No need to update'\n  }\n\n  postSocketZip (config) {\n    debug('postSocketZip')\n    return this.zipCallback({ config, install: true })\n  }\n\n  patchSocketZip (config) {\n    debug('patchSocketZip')\n    return this.zipCallback({ config, install: false })\n  }\n\n  async zipCallback ({ config, install = false }) {\n    debug('zipCallback')\n    let endpointPath = `/v2/instances/${session.project.instance}/sockets/`\n\n    if (!install) {\n      endpointPath += `${this.name}/`\n    }\n\n    const { numberOfFiles, allFilesList } = await this.createZip()\n    if (numberOfFiles === 0 && this.isConfigSynced) {\n      debug('config is synced and nothing to update')\n      return Promise.resolve()\n    }\n    debug('preparing update')\n\n    return new Promise((resolve, reject) => {\n      const form = new FormData()\n\n      form.append('name', this.name)\n      form.append('environment', this.name)\n\n      if (config) {\n        form.append('config', JSON.stringify(config))\n      }\n\n      const metadata = Object.assign({}, this.remote.metadata, { sources: this.getSocketSrcChecksum() })\n      form.append('metadata', JSON.stringify(metadata))\n\n      form.append('zip_file_list', JSON.stringify(allFilesList))\n      if (numberOfFiles > 0) {\n        form.append('zip_file', fs.createReadStream(this.getSocketZip()))\n      }\n\n      form.submit({\n        method: install ? 'POST' : 'PATCH',\n        protocol: 'https:',\n        host: session.getHost(),\n        headers: {\n          'X-Api-Key': session.settings.account.getAuthKey()\n        },\n        path: endpointPath\n\n      }, (err, res) => {\n        debug('end upload')\n        let responseData = ''\n        let responseCode = ''\n        res.on('data', (data) => {\n          responseData += data.toString()\n          responseCode = res.statusCode\n        })\n        res.on('end', () => {\n          if (err || responseCode === 404) {\n            debug(`socket ${this.name} was not found`)\n            return reject(err || res)\n          }\n\n          if (responseCode > 299) {\n            debug(`error while updating socket (${res.statusCode})`)\n            return reject(responseData)\n          }\n\n          debug(`socket ${this.name} was found`)\n          resolve(responseData)\n        })\n      })\n    })\n  }\n\n  getSocketPath () {\n    if (this.isDependencySocket || this.isProjectRegistryDependency) {\n      const socketFolder = path.join(session.getBuildPath(), this.name)\n      mkdirp.sync(socketFolder)\n      return socketFolder\n    }\n    return this.socketPath\n  }\n\n  getSocketYMLFile () {\n    return path.join(this.getSocketPath(), 'socket.yml')\n  }\n\n  // async preCompileRegistrySocket () {\n  //   await Registry.getSocket(this)\n  //   const fileName = path.join(session.getBuildPath(), `${this.name}.zip`)\n  //\n  //   return new Promise((resolve, reject) => {\n  //     fs.createReadStream(fileName)\n  //       .pipe(unzip.Extract({ path: this.getSocketPath() }))\n  //       .on('close', () => {\n  //         debug('Unzip finished')\n  //         resolve(this.compile())\n  //       })\n  //   })\n  // }\n\n  compile (params = { updateSocketNPMDeps: false }) {\n    debug(`compile: ${this.name}`)\n    debug(`compile socketPath: ${this.getSocketPath()}`)\n\n    return new Promise(async (resolve, reject) => {\n      if (this.isDependencySocket || this.isProjectRegistryDependency) {\n        await Registry.getSocket(this)\n        const fileName = path.join(session.getBuildPath(), `${this.name}.zip`)\n\n        await new Promise((resolve, reject) => {\n          fs.createReadStream(fileName)\n            .pipe(unzip.Extract({ path: this.getSocketPath() }))\n            .on('close', () => {\n              debug('Unzip finished')\n              resolve()\n            })\n        })\n      }\n\n      const command = 'npm'\n      let args = null\n\n      if (params.updateSocketNPMDeps) {\n        args = 'run build -s'\n      } else {\n        args = 'run build:src -s'\n      }\n\n      process.env.FORCE_COLOR = true\n      const out = child.spawnSync(\n        command,\n        args.split(' '),\n        {\n          cwd: this.getSocketPath(),\n          maxBuffer: 2048 * 1024,\n          stdio: [process.stdio, 'pipe', 'pipe']\n        }\n      )\n\n      if (out.status !== 0) {\n        reject(new CompileError(out.stderr.toString()))\n      } else {\n        resolve()\n      }\n    })\n    // let compilation = null\n    // if (params.updateSocketNPMDeps) {\n    //   if (this.isDependencySocket || this.isProjectRegistryDependency) {\n    //     compilation = this.preCompileRegistrySocket()\n    //   } else {\n    //     compilation = utils.updateSocketNPMDeps(this.getSocketPath())\n    //   }\n    // } else {\n    //   compilation = Promise.resolve()\n    // }\n    //\n    // return compilation\n    //   .then((updateSocketDepsStatus) => {\n    //     debug('updateSocketDepsStatus', updateSocketDepsStatus)\n    //     return compile([this], params.withSourceMaps)\n    //   })\n  }\n\n  isConfigSynced (config) {\n    debug('isConfigSynced')\n    return _.isEqual(config, this.remote.config)\n  }\n\n  updateConfig (config) {\n    if (this.isConfigSynced(config)) {\n      return Promise.resolve()\n    }\n    return axios.request({\n      url: `https://${session.getHost()}/v2/instances/${session.project.instance}/sockets/${this.name}/`,\n      method: 'PATCH',\n      data: { config },\n      headers: {\n        'X-Api-Key': session.settings.account.getAuthKey()\n      }\n    })\n  }\n\n  async update (params = { config: null, updateSocketNPMDeps: false, updateEnv: false }) {\n    debug(`Socket update: ${this.name}`, params)\n    const config = Object.assign({}, this.remote.config, params.config)\n\n    // Get options from the env\n    if (this.spec.config) {\n      Object.keys(this.spec.config).forEach((optionName) => {\n        const envValue = this.getConfigOptionFromEnv(optionName)\n        if (envValue) {\n          debug(`setting value from env for: ${optionName}`)\n          config[optionName] = envValue\n        }\n      })\n    }\n\n    await this.verify()\n    await this.compile({ updateSocketNPMDeps: params.updateSocketNPMDeps })\n    if (params.updateEnv) {\n      await this.updateEnv()\n    }\n\n    let resp = null\n    if (this.existRemotely) {\n      resp = await this.patchSocketZip(config)\n    } else {\n      resp = await this.postSocketZip(config)\n    }\n\n    if (resp && resp.status !== 'ok') return this.waitForStatusInfo()\n    return { status: 'stopped' }\n  }\n\n  waitForStatusInfo () {\n    debug('waitForStatusInfo')\n\n    return new Promise((resolve, reject) => {\n      const getStatus = async () => {\n        const socket = await this.getRemote()\n        if (socket.status !== 'ok' && socket.status !== 'error') {\n          setTimeout(getStatus, 200)\n        } else {\n          this.setRemoteState(socket)\n          resolve({ status: socket.status, message: socket.status_info })\n        }\n      }\n      getStatus()\n    })\n  }\n\n  // Hosting\n  addHosting (hostingName, params) {\n    this.settings.addHosting(hostingName, params)\n    this.settings.save()\n  }\n\n  getHosting (hostingName) {\n    return Hosting.get(this, hostingName)\n  }\n\n  listHostings () {\n    return Hosting.list(this)\n  }\n\n  deleteHosting (hostingName) {\n    this.settings.deleteHosting(hostingName)\n    this.settings.save()\n    echo()\n    echo(4)(`Hosting ${hostingName} of ${this.name} has been deleted from config...`)\n  }\n\n  getScriptObject (fileFullPath) {\n    const srcFile = fileFullPath\n    const compiledFile = fileFullPath.replace(this.getSrcFolder(), this.getCompiledScriptsFolder())\n    return {\n      srcFile,\n      compiledFile\n    }\n  }\n\n  getScriptsInSocket () {\n    debug('getScriptsInSocket')\n\n    return new Promise((resolve, reject) => {\n      function fileFilter (file) {\n        const fileWithLocalPath = file.fullPath.replace(`${this.getSocketPath()}${path.sep}`, '')\n        if (fileWithLocalPath.match(/test/)) { return false }\n        if (fileWithLocalPath.match(/tests/)) { return false }\n        if (fileWithLocalPath.match(/\\.bundles/)) { return false }\n        if (fileWithLocalPath.match(/node_modules/)) { return false }\n        if (!fileWithLocalPath.match(/\\.js$/)) { return false }\n        return true\n      }\n\n      const findFiles = readdirp({ root: this.getSrcFolder(), fileFilter: fileFilter.bind(this) })\n      const files = []\n      // Adding all files (besides those filtered out)\n      findFiles.on('data', (file) => {\n        files.push(this.getScriptObject(file.fullPath))\n      })\n\n      findFiles.on('end', () => {\n        resolve(files)\n      })\n    })\n  }\n\n  async getScriptsToCompile () {\n    debug('getScriptsToCompile')\n\n    const files = await this.getScriptsInSocket()\n    const filesToCompile = []\n    files.forEach((file) => {\n      const fileNameWithLocalPath = file.srcFile.replace(this.getSrcFolder(), '')\n      const localSrcChecksum = md5(fs.readFileSync(file.srcFile, 'utf8'))\n      const remoteSrcChecksum =\n        this.remote.metadata.sources ? this.remote.metadata.sources[fileNameWithLocalPath] : ''\n\n      debug(`Checksums for ${fileNameWithLocalPath}`, localSrcChecksum, remoteSrcChecksum)\n      if (localSrcChecksum !== remoteSrcChecksum) {\n        filesToCompile.push(file)\n      }\n    })\n    return filesToCompile\n  }\n\n  getFileForEndpoint (endpointName) {\n    if (endpointName.startsWith('events')) {\n      return this.spec.event_handlers[endpointName].file\n    }\n    return this.spec.endpoints[endpointName].file\n  }\n\n  getSourceMapPath (endpointName) {\n    const filePath = this.getFileForEndpoint(endpointName)\n    const { base, dir } = path.parse(filePath)\n    return path.join(\n      this.getSocketPath(),\n      dir,\n      '.bundles',\n      `${base}.map`\n    )\n  }\n\n  getOrigFileLine (traceData, endpointName) {\n    const smc = new SourceMap.SourceMapConsumer(\n      fs.readFileSync(this.getSourceMapPath(endpointName), { encoding: 'utf-8' })\n    )\n    return smc.originalPositionFor({\n      line: traceData.lineNumber,\n      column: traceData.columnNumber\n    })\n  }\n\n  getPrettyTrace (traceData, endpointName) {\n    const origFileLine = this.getOrigFileLine(traceData, endpointName)\n    const origFilePath = utils.getOrigFilePath(origFileLine)\n\n    return {\n      origFilePath,\n      lineNumber: origFileLine.line,\n      columnNumber: origFileLine.column,\n      lines: [\n        fs.readFileSync(\n          // origFilePath,\n          path.join(this.getSocketPath(), '../', origFilePath),\n          { encoding: 'utf-8' }).split('\\n')[origFileLine.line - 1],\n        p(origFileLine.column)('^')\n      ]\n    }\n  }\n\n  // Config\n  getConfigOptions () {\n    return this.spec.config\n  }\n\n  getConfigOptionFromEnv (optionName) {\n    return process.env[`${this.name.toUpperCase()}_${optionName.toUpperCase()}`]\n  }\n\n  getConfigOptionsToAsk () {\n    // If there is not options in spec it is always no options to ask\n    if (this.spec && !this.spec.config) { return {} }\n\n    const options = {}\n\n    if (this.isDependencySocket || this.isProjectRegistryDependency) {\n      if (this.remote.status === 'ok') {\n        return options\n      }\n\n      Object.keys(this.spec.config).forEach((optionName) => {\n        const envValue = this.getConfigOptionFromEnv(optionName)\n        const option = this.spec.config[optionName]\n        if (option.required && !envValue) {\n          options[optionName] = option\n        }\n      })\n      return options\n    }\n\n    if (this.existLocally) {\n      Object.keys(this.spec.config).forEach((optionName) => {\n        const envValue = this.getConfigOptionFromEnv(optionName)\n        const option = this.spec.config[optionName]\n        if (option.required && !envValue) {\n          if (!this.remote.config || !this.remote.config[optionName]) {\n            options[optionName] = option\n          }\n        }\n      })\n      return options\n    }\n  }\n\n  // Registry\n  bumpVersion (bumpType) {\n    const nextVersion = this.settings.bumpVersion(bumpType)\n    this.spec.version = nextVersion\n    return nextVersion\n  }\n\n  submit () {\n    debug('submit')\n    this.isCompatible()\n    const registry = new Registry()\n    return registry.submitSocket(this)\n  }\n\n  // Socket dependencies\n  getDeps () {\n    return this.settings.getDependencies()\n  }\n\n  async getDepsRegistrySockets () {\n    debug(`getDepsRegistrySockets for: ${this.name}`)\n    const registry = new Registry()\n\n    const getDeepDeps = (deps, socketToAdd) => {\n      debug('getDeepDeps', deps)\n      const sockets = []\n      if (socketToAdd) {\n        sockets.push(socketToAdd)\n      }\n      return Promise.all(sockets.concat(Object.keys(deps).map(async (dependencyName) => {\n        debug(`processing dependency: ${dependencyName}`)\n        const socket = await registry.searchSocketByName(dependencyName, deps[dependencyName].version)\n        socket.dependencyOf = socketToAdd ? socketToAdd.name : this.name\n\n        if (!_.isEmpty(socket.config.dependencies)) {\n          return getDeepDeps(socket.config.dependencies, socket)\n        }\n        debug(`returning socket without dependencies ${socket.name}`)\n        return Promise.resolve(socket)\n      })))\n    }\n\n    debug(`Defined dependencies of \"${this.name}\" to follow: ${this.spec.dependencies}`)\n    if (this.spec.dependencies) {\n      const arr = await getDeepDeps(this.spec.dependencies)\n      const depsObjects = await Promise.all(_.flatten(arr).map(async socket => {\n        const createdSocket = await Socket.get(socket.name)\n        createdSocket.isDependencySocket = true\n        createdSocket.dependencyOf = [socket.dependencyOf]\n        return createdSocket\n      }))\n      this.dependencies = depsObjects\n    }\n\n    return Promise.resolve()\n  }\n\n  async addDependency (socketFromRegistry) {\n    const socketName = socketFromRegistry.name\n    const socketVersion = socketFromRegistry.version\n    this.settings.addDependency(socketName, socketVersion)\n  }\n\n  async socketEnvShouldBeUpdated () {\n    debug('socketEnvShouldBeUpdated')\n    try {\n      const resp = await axios.request({\n        url: `https://${session.getHost()}/v2/instances/${session.project.instance}/environments/${this.name}/`,\n        method: 'GET',\n        timeout: 50000,\n        headers: {\n          'X-Api-Key': session.settings.account.getAuthKey()\n        }\n      })\n\n      if (resp.data.metadata.checksum === this.getSocketNodeModulesChecksum()) {\n        debug('socketEnvShouldBeUpdated', 'env is up to date')\n        return false\n      }\n      return 'PATCH'\n    } catch (err) {\n      return 'POST'\n    }\n  }\n\n  getSocketSrcChecksum () {\n    const files = klawSync(this.getSrcFolder(), {nodir: true})\n    const checksums = {}\n    files.forEach((file) => {\n      const fileReltivePath = file.path.replace(this.getSrcFolder(), '')\n      checksums[fileReltivePath] = md5(fs.readFileSync(file.path, 'utf8'))\n    })\n    return checksums\n  }\n\n  isCompatible () {\n    const socketMajorVersion = this.spec.version.split('.')[0]\n    if (socketMajorVersion !== session.majorVersion) {\n      throw new CompatibilityError(socketMajorVersion, session.majorVersion)\n    }\n    return true\n  }\n\n  shouldBeUpdated () {\n    debug('shouldBeUpdated')\n    if (this.existLocally && this.existRemotely) {\n      const files = this.remote.files\n      return Object.keys(files).some((file) => {\n        let filePath\n\n        if (file === 'socket.yml') {\n          filePath = this.getSocketYMLFile()\n        } else if (file.endsWith('.js')) {\n          filePath = path.join(this.getCompiledScriptsFolder(), file)\n        } else {\n          filePath = path.join(this.getSrcFolder(), file)\n        }\n\n        const remoteChecksum = files[file].checksum\n        const localChecksum = md5(fs.readFileSync(filePath))\n\n        debug(file)\n        debug(localChecksum)\n        debug(remoteChecksum)\n        return localChecksum !== remoteChecksum\n      })\n    } else if (!this.existRemotely) {\n      return true\n    } else if (this.isDependencySocket || this.isProjectRegistryDependency) {\n      if (this.remote.status !== 'ok') {\n        return false\n      }\n\n      debug(`Spec version: ${this.spec.version}`)\n      debug(`Remote version: ${this.getVersion()}`)\n      if (this.spec.version === this.getVersion()) {\n        return false\n      }\n    }\n  }\n}\n\nSocket.listLocal = utils.listLocal\n\nexport default Socket\n"]}