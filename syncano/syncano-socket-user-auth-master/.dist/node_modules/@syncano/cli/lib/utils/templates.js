'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _debug = require('./debug');

var _debug2 = _interopRequireDefault(_debug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const { debug } = (0, _debug2.default)('template');

const getTemplatePath = templateName => {
  debug('getTemplatePath', templateName);
  const options = { paths: [_path2.default.join(process.cwd(), 'node_modules')] };
  return _path2.default.dirname(require.resolve(templateName, options));
};

const getTemplateSpec = templateName => {
  const templatePath = getTemplatePath(templateName);
  debug('getTemplateSpec', templatePath);
  return JSON.parse(_fs2.default.readFileSync(_path2.default.join(templatePath, 'package.json')));
};

function getTemplate(templateName) {
  debug('getTemplate', templateName);
  const templatePath = getTemplatePath(templateName);
  return _path2.default.join(templatePath, 'template');
}

const builtInSocketTemplates = ['@syncano/template-socket-vanilla', '@syncano/template-socket-es6'];

const builtInProjectTemplates = ['@syncano/template-project-empty', '@syncano/template-project-hello'];

const findInstalledTemplates = pattern => {
  debug('findInstalledTemplates', pattern);
  try {
    const configFile = JSON.parse(_fs2.default.readFileSync(_path2.default.join(process.cwd(), 'package.json')));
    const regex = new RegExp(pattern);
    const devDeps = _lodash2.default.findKey(configFile.devDependencies, (obj, key) => key.match(regex));
    const deps = _lodash2.default.findKey(configFile.dependencies, (obj, key) => key.match(regex));
    return [].concat(devDeps || [], deps || []);
  } catch (err) {
    debug(err);
    return [];
  }
};

const installedProjectTemplates = () => {
  return findInstalledTemplates('syncano-template-project');
};

const installedSocketTemplates = () => {
  return findInstalledTemplates('syncano-template-socket');
};

exports.default = {
  getTemplate,
  getTemplateSpec,
  builtInSocketTemplates,
  builtInProjectTemplates,
  installedProjectTemplates,
  installedSocketTemplates
};
module.exports = exports['default'];
//# sourceMappingURL=templates.js.map