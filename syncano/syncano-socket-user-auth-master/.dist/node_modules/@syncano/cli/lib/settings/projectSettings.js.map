{"version":3,"sources":["../../src/settings/projectSettings.js"],"names":["debug","ProjectSettings","constructor","projectPath","name","baseDir","loaded","load","getPlugins","attributes","plugins","installSocket","socket","dependencies","sockets","version","src","save","getAllSocketsYmlPath","Promise","resolve","reject","paths","root","fileFilter","on","entry","push","fullPath","err","getHostingsList","socketYamls","hostingsList","socketsAttributes","map","yamlPath","getAttributesFromYaml","forEach","socketAttributes","hosting","path","readFileSync","uninstallSocket","socketName","getSocket","getSocketTemplates","templates","getDependSockets","getDependSocket","getHosting","hostingName","addHosting","params","deleteHosting","listHosting","length","hostings","list","key","Object","keys"],"mappings":"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","file":"projectSettings.js","sourcesContent":["import readdirp from 'readdirp'\nimport YAML from 'js-yaml'\nimport fs from 'fs'\n\nimport logger from '../utils/debug'\nimport Settings from './settings'\n\nconst { debug } = logger('settings-project')\n\nexport default class ProjectSettings extends Settings {\n  constructor (projectPath) {\n    super()\n    this.name = 'syncano'\n    this.baseDir = projectPath\n    if (projectPath) {\n      this.loaded = this.load()\n    }\n  }\n\n  getPlugins () {\n    return this.attributes.plugins\n  }\n\n  installSocket (socket) {\n    debug('installSocket()')\n    const dependencies = this.attributes.dependencies || { sockets: {} }\n    const sockets = dependencies.sockets\n\n    sockets[socket.name] = socket.version ? { version: socket.version } : { src: `./${socket.name}` }\n    this.attributes.dependencies = dependencies\n\n    this.save()\n  }\n\n  getAllSocketsYmlPath () {\n    return new Promise((resolve, reject) => {\n      const paths = []\n      readdirp({ root: this.baseDir, fileFilter: 'socket.yml' })\n        .on('data', (entry) => {\n          paths.push(entry.fullPath)\n        })\n        .on('end', () => {\n          resolve(paths)\n        })\n        .on('error', (err) => {\n          reject(err)\n        })\n    })\n  }\n\n  async getHostingsList () {\n    const socketYamls = await this.getAllSocketsYmlPath()\n    const hostingsList = {}\n\n    const socketsAttributes = socketYamls.map((yamlPath) => ProjectSettings.getAttributesFromYaml(yamlPath))\n    socketsAttributes.forEach((socketAttributes) => {\n      hostingsList[socketAttributes.name] = socketAttributes.hosting\n    })\n\n    return hostingsList\n  }\n\n  static getAttributesFromYaml (path) {\n    const socketAttributes = YAML.load(fs.readFileSync(path, 'utf8'))\n\n    return socketAttributes\n  }\n\n  uninstallSocket (socketName) {\n    debug('uninstallSocket')\n    const dependencies = this.attributes.dependencies || { sockets: {} }\n    const sockets = dependencies.sockets\n\n    delete sockets[socketName]\n    this.save()\n  }\n\n  getSocket (socketName) {\n    return this.attributes.dependencies.sockets[socketName]\n  }\n\n  getSocketTemplates () {\n    try {\n      return this.attributes.templates.sockets\n    } catch (err) {\n      return []\n    }\n  }\n\n  getDependSockets () {\n    try {\n      return this.attributes.dependencies.sockets\n    } catch (err) {\n      return {}\n    }\n  }\n\n  getDependSocket (socketName) {\n    try {\n      return this.attributes.dependencies.sockets[socketName]\n    } catch (err) {\n      return null\n    }\n  }\n\n  // Hosting\n  getHosting (hostingName) {\n    debug('getHosting()')\n    return this.attributes.hosting ? this.attributes.hosting[hostingName] : null\n  }\n\n  addHosting (hostingName, params) {\n    if (!this.attributes.hosting) this.attributes.hosting = {}\n    this.attributes.hosting[hostingName] = params\n    this.save()\n  }\n\n  deleteHosting (hostingName) {\n    if (this.attributes.hosting) {\n      delete this.attributes.hosting[hostingName]\n    }\n\n    if (this.listHosting().length === 0) {\n      delete this.attributes.hosting\n    }\n    this.save()\n  }\n\n  listHosting () {\n    debug('list()')\n    const hostings = this.attributes.hosting\n    const list = []\n    if (hostings) {\n      for (const key of Object.keys(hostings)) {\n        list.push({\n          name: key,\n          src: hostings[key].src\n        })\n      }\n    }\n    return list\n  }\n}\n"]}