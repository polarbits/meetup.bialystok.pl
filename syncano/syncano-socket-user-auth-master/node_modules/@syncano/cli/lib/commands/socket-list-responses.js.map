{"version":3,"sources":["../../src/commands/socket-list-responses.js"],"names":["renderStatus","object","status","type","getStatus","dim","green","yellow","red","socketListResponses","session","lackSockets","lackSocket","name","createNewOne","cyan","installNewOne","params","white","responses","socket","description","existRemotely","remote","spec","bold","version","getType","msg","endpoint","metadata","getFullName","url","getURL","notSynced","parameter","param","parameters","example","response","exitCode","exit_code","mimetype","exampleLines","split","map","line","join","handler","event","grey"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA,MAAMA,eAAgBC,MAAD,IAAY;AAC/B,QAAM,EAAEC,MAAF,EAAUC,IAAV,KAAmBF,OAAOG,SAAP,EAAzB;;AAEA,UAAQD,IAAR;AACE,SAAK,IAAL;AACE,aAAO,gBAAOE,GAAP,CAAWC,KAAX,CAAiBJ,MAAjB,CAAP;AACF,SAAK,MAAL;AACE,aAAO,gBAAOG,GAAP,CAAWE,MAAX,CAAkBL,MAAlB,CAAP;AACF,SAAK,MAAL;AACE,aAAO,gBAAOG,GAAP,CAAWG,GAAX,CAAeN,MAAf,CAAP;AACF;AACE,aAAOA,MAAP;AARJ;AAUD,CAbD;;AAeA,MAAMO,sBAAuBC,OAAD,KAAc;AACxCC,eAAa,8CAD2B;AAExCC,cAAY,CAAC,EAAEC,IAAF,EAAD,KACT,GAAEA,OAAO,gBAAON,MAAP,CAAcM,IAAd,CAAP,GAA6B,aAAc,yCAHR;AAKxCC,gBAAe,QAAO,gBAAOC,IAAP,CAAY,2BAAZ,CAAyC,qBALvB;AAMxCC,iBAAgB,QAAO,gBAAOD,IAAP,CAAY,wBAAZ,CAAsC,oCANrB;AAOxCE,UAAS,GAAE,gBAAOC,KAAP,CAAa,OAAb,CAAsB,GAPO;AAQxCC,aAAY,GAAE,gBAAOD,KAAP,CAAa,QAAb,CAAuB,GARG;AASxCE,UAASA,MAAD,IAAY;AAClB,QAAIC,cAAc,EAAlB;AACA,QAAID,OAAOE,aAAX,EAA0B;AACxBD,oBAAcD,OAAOG,MAAP,CAAcC,IAAd,CAAmBH,WAAnB,IAAkC,EAAhD;AACD,KAFD,MAEO;AACLA,oBAAcD,OAAOI,IAAP,CAAYH,WAAZ,IAA2B,EAAzC;AACD;;AAED,WAAO;AACLR,YAAO,GAAE,gBAAOE,IAAP,CAAYU,IAAZ,CAAiB,QAAjB,CAA2B,KAAI,gBAAOV,IAAP,CAAYU,IAAZ,CAAiBL,OAAOP,IAAxB,CAA8B,EADjE;AAELQ,mBAAc,GAAE,gBAAOhB,GAAP,CAAW,aAAX,CAA0B,KAAIgB,WAAY,EAFrD;AAGLK,eAAU,GAAE,gBAAOrB,GAAP,CAAW,SAAX,CAAsB,KAAIe,OAAOI,IAAP,CAAYE,OAAZ,IAAuB,EAAG,EAH3D;AAILvB,YAAO,GAAE,gBAAOE,GAAP,CAAW,MAAX,CAAmB,KAAIe,OAAOO,OAAP,GAAiBC,GAAI,EAJhD;AAKL1B,cAAS,GAAE,gBAAOG,GAAP,CAAW,QAAX,CAAqB,KAAIL,aAAaoB,MAAb,CAAqB;AALpD,KAAP;AAOD,GAxBuC;AAyBxCS,YAAWA,QAAD,IAAc;AACtB,UAAMC,WAAWD,SAASC,QAA1B;;AAEA,WAAOD,YAAY;AACjBhB,YAAO,GAAE,gBAAOK,KAAP,CAAa,UAAb,CAAyB,KAAI,gBAAOH,IAAP,CAAYc,SAASE,WAAT,EAAZ,CAAoC,EADzD;AAEjBV,mBAAc,GAAE,gBAAOhB,GAAP,CAAW,aAAX,CAA0B,KAAIyB,SAAST,WAAT,IAAwB,EAAG,EAFxD;AAGjBW,WAAM,GAAE,gBAAO3B,GAAP,CAAW,KAAX,CAAkB,KAAIwB,SAASI,MAAT,EAAkB,EAH/B;AAIjBC,iBAAY,GAAE,gBAAO7B,GAAP,CAAW,QAAX,CAAqB,KAAIL,aAAa6B,QAAb,CAAuB,EAJ7C;AAKjBM,iBAAYC,KAAD,IAAWA,SAAU;AAC9BvB,cAAO,GAAE,gBAAOR,GAAP,CAAW,MAAX,CAAmB,KAAI,gBAAOU,IAAP,CAAYqB,KAAZ,KAAsB,EAAG,EAD3B;AAE9Bf,qBAAc,GAAE,gBAAOhB,GAAP,CAAW,aAAX,CAA0B,KAAIyB,SAASO,UAAT,CAAoBD,KAApB,EAA2Bf,WAA3B,IAA0C,EAAG,EAF7D;AAG9BiB,iBAAU,GAAE,gBAAOjC,GAAP,CAAW,SAAX,CAAsB,KAAI,gBAAOU,IAAP,CAAYV,GAAZ,CAAgByB,SAASO,UAAT,CAAoBD,KAApB,EAA2BE,OAA3C,CAAoD;AAH5D,OALf;AAUjBC,gBAAWD,OAAD,IAAa;AACrB,cAAME,WAAWF,QAAQG,SAAR,IAAqB,KAAtC;AACA,cAAMC,WAAWJ,QAAQI,QAAR,IAAoB,kBAArC;AACA,cAAM,EAAErB,WAAF,KAAkBiB,WAAW,EAAnC;;AAEA,YAAIK,eAAe,EAAnB;AACA,YAAIL,WAAWA,QAAQA,OAAvB,EAAgC;AAC9BK,yBAAeL,QAAQA,OAAR,CAAgBM,KAAhB,CAAsB,IAAtB,EAA4BC,GAA5B,CAAiCC,IAAD,IAAU,mBAAE,EAAF,EAAMA,IAAN,CAA1C,EAAuDC,IAAvD,CAA4D,IAA5D,CAAf;AACD;;AAED,eAAO;AACLL,oBAAW,GAAE,gBAAOrC,GAAP,CAAW,UAAX,CAAuB,KAAIqC,QAAS,EAD5C;AAELrB,uBAAaiB,WAAY,GAAE,gBAAOjC,GAAP,CAAW,aAAX,CAA0B,KAAI,2BAAUmC,QAAV,EAAoBnB,WAApB,CAAiC,EAFrF;AAGLmB,oBAAUF,WAAY,GAAE,gBAAOjC,GAAP,CAAW,WAAX,CAAwB,KAAI,2BAAUmC,QAAV,CAAoB,EAHnE;AAILF,mBAASK,gBAAiB,GAAE,gBAAOtC,GAAP,CAAW,SAAX,CAAsB,MAAK,mBAAE,CAAF,EAAKsC,YAAL,CAAmB;AAJrE,SAAP;AAMD;AA1BgB,KAAnB;AA4BD,GAxDuC;AAyDxCK,WAAUA,OAAD,IAAa;AACpB,UAAMlB,WAAWkB,QAAQlB,QAAzB;;AAEA,WAAOkB,WAAW;AAChBnC,YAAO,GAAE,gBAAOK,KAAP,CAAa,eAAb,CAA8B,KAAI,gBAAOH,IAAP,CAAYiC,QAAQnC,IAApB,CAA0B,EADrD;AAEhBQ,mBAAc,GAAE,gBAAOhB,GAAP,CAAW,aAAX,CAA0B,KAAIyB,SAAST,WAAT,IAAwB,EAAG,EAFzD;AAGhBc,iBAAYC,KAAD,IAAWA,SAAU;AAC9BvB,cAAO,GAAE,gBAAOR,GAAP,CAAW,MAAX,CAAmB,KAAI,gBAAOU,IAAP,CAAYqB,KAAZ,KAAsB,EAAG,EAD3B;AAE9Bf,qBAAc,GAAE,gBAAOhB,GAAP,CAAW,aAAX,CAA0B,KAAIyB,SAASO,UAAT,CAAoBD,KAApB,EAA2Bf,WAA3B,IAA0C,EAAG,EAF7D;AAG9BiB,iBAAU,GAAE,gBAAOjC,GAAP,CAAW,SAAX,CAAsB,KAAI,gBAAOU,IAAP,CAAYV,GAAZ,CAAgByB,SAASO,UAAT,CAAoBD,KAApB,EAA2BE,OAA3C,CAAoD;AAH5D;AAHhB,KAAlB;AASD,GArEuC;AAsExCW,SAAQA,KAAD,IAAWA,SAAS;AACzBpC,UAAO,GAAE,gBAAOK,KAAP,CAAa,OAAb,CAAsB,KAAI,gBAAOH,IAAP,CAAYkC,MAAMpC,IAAlB,CAAwB,EADlC;AAEzBQ,iBAAc,GAAE,gBAAOhB,GAAP,CAAW,aAAX,CAA0B,KAAI4C,MAAMnB,QAAN,CAAeT,WAAf,IAA8B,EAAG,EAFtD;AAGzBc,eAAYC,KAAD,IAAWA,SAAU;AAC9BvB,YAAO,GAAE,gBAAOR,GAAP,CAAW,MAAX,CAAmB,KAAI,gBAAOU,IAAP,CAAYqB,KAAZ,KAAsB,EAAG,EAD3B;AAE9Bf,mBAAc,GAAE,gBAAOhB,GAAP,CAAW,aAAX,CAA0B,KAAI4C,MAAMnB,QAAN,CAAeO,UAAf,CAA0BD,KAA1B,EAAiCf,WAAjC,IAAgD,EAAG,EAFnE;AAG9BiB,eAAU,GAAE,gBAAOjC,GAAP,CAAW,SAAX,CAAsB,KAAI,gBAAO6C,IAAP,CAAYD,MAAMnB,QAAN,CAAeO,UAAf,CAA0BD,KAA1B,EAAiCE,OAA7C,CAAsD;AAH9D;AAHP;AAtEa,CAAd,CAA5B;;kBAiFe7B,mB","file":"socket-list-responses.js","sourcesContent":["import format from 'chalk'\nimport { p, printCode } from '../utils/print-tools'\n\nconst renderStatus = (object) => {\n  const { status, type } = object.getStatus()\n\n  switch (type) {\n    case 'ok':\n      return format.dim.green(status)\n    case 'warn':\n      return format.dim.yellow(status)\n    case 'fail':\n      return format.dim.red(status)\n    default:\n      return status\n  }\n}\n\nconst socketListResponses = (session) => ({\n  lackSockets: 'No Socket was found on server nor in config!',\n  lackSocket: ({ name }) => (\n    `${name ? format.yellow(name) : 'This Socket'} was not found on server nor in config!`\n  ),\n  createNewOne: `Type ${format.cyan('syncano-cli create <name>')} to create new one.`,\n  installNewOne: `Type ${format.cyan('syncano-cli add <name>')} to install new one from registry.`,\n  params: `${format.white('input')}:`,\n  responses: `${format.white('output')}:`,\n  socket: (socket) => {\n    let description = ''\n    if (socket.existRemotely) {\n      description = socket.remote.spec.description || ''\n    } else {\n      description = socket.spec.description || ''\n    }\n\n    return {\n      name: `${format.cyan.bold('socket')}: ${format.cyan.bold(socket.name)}`,\n      description: `${format.dim('description')}: ${description}`,\n      version: `${format.dim('version')}: ${socket.spec.version || ''}`,\n      type: `${format.dim('type')}: ${socket.getType().msg}`,\n      status: `${format.dim('status')}: ${renderStatus(socket)}`\n    }\n  },\n  endpoint: (endpoint) => {\n    const metadata = endpoint.metadata\n\n    return endpoint && {\n      name: `${format.white('endpoint')}: ${format.cyan(endpoint.getFullName())}`,\n      description: `${format.dim('description')}: ${metadata.description || ''}`,\n      url: `${format.dim('url')}: ${endpoint.getURL()}`,\n      notSynced: `${format.dim('status')}: ${renderStatus(endpoint)}`,\n      parameter: (param) => param && ({\n        name: `${format.dim('name')}: ${format.cyan(param) || ''}`,\n        description: `${format.dim('description')}: ${metadata.parameters[param].description || ''}`,\n        example: `${format.dim('example')}: ${format.cyan.dim(metadata.parameters[param].example)}`\n      }),\n      response: (example) => {\n        const exitCode = example.exit_code || '200'\n        const mimetype = example.mimetype || 'application/json'\n        const { description } = example || ''\n\n        let exampleLines = ''\n        if (example && example.example) {\n          exampleLines = example.example.split('\\n').map((line) => p(12)(line)).join('\\n')\n        }\n\n        return {\n          mimetype: `${format.dim('mimetype')}: ${mimetype}`,\n          description: example && `${format.dim('description')}: ${printCode(exitCode, description)}`,\n          exitCode: example && `${format.dim('exit code')}: ${printCode(exitCode)}`,\n          example: exampleLines && `${format.dim('example')}:\\n${p(2)(exampleLines)}`\n        }\n      }\n    }\n  },\n  handler: (handler) => {\n    const metadata = handler.metadata\n\n    return handler && {\n      name: `${format.white('event handler')}: ${format.cyan(handler.name)}`,\n      description: `${format.dim('description')}: ${metadata.description || ''}`,\n      parameter: (param) => param && ({\n        name: `${format.dim('name')}: ${format.cyan(param) || ''}`,\n        description: `${format.dim('description')}: ${metadata.parameters[param].description || ''}`,\n        example: `${format.dim('example')}: ${format.cyan.dim(metadata.parameters[param].example)}`\n      })\n    }\n  },\n  event: (event) => event && {\n    name: `${format.white('event')}: ${format.cyan(event.name)}`,\n    description: `${format.dim('description')}: ${event.metadata.description || ''}`,\n    parameter: (param) => param && ({\n      name: `${format.dim('name')}: ${format.cyan(param) || ''}`,\n      description: `${format.dim('description')}: ${event.metadata.parameters[param].description || ''}`,\n      example: `${format.dim('example')}: ${format.grey(event.metadata.parameters[param].example)}`\n    })\n  }\n})\n\nexport default socketListResponses\n"]}