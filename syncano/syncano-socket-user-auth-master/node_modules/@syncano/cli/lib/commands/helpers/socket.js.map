{"version":3,"sources":["../../../src/commands/helpers/socket.js"],"names":["debug","askQuestions","configOptions","questions","Object","keys","forEach","paramName","param","longDesc","long_description","split","join","shortDesc","bold","description","dim","push","name","message","reset","default","validate","value","required","prompt","updateSocket","socket","config","startTime","Date","getTime","updateStatus","update","endTime","status","green","cyan","red","errMsg","error","lineNo","lineno","err","updateConfig","errorType","socketNotFound"],"mappings":"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","file":"socket.js","sourcesContent":["import inquirer from 'inquirer'\nimport format from 'chalk'\n\nimport logger from '../../utils/debug'\nimport { p, echo, echon, error, warning } from '../../utils/print-tools'\n\nconst { debug } = logger('cmd-helpers-socket')\n\nexport const askQuestions = (configOptions) => {\n  const questions = []\n\n  Object.keys(configOptions).forEach((paramName) => {\n    const param = configOptions[paramName]\n    const longDesc = param.long_description ? param.long_description.split('\\n').join('\\n    ') : ' '\n    let shortDesc = format.bold(paramName)\n    if (param.description) {\n      shortDesc = `${format.bold(param.description)} ${format.dim(`(${paramName})`)}`\n    }\n    questions.push({\n      name: paramName,\n      message: [\n        p(2)(shortDesc),\n        p(4)(format.reset(longDesc)),\n        p(4)('Type in value:')\n      ].join('\\n'),\n      default: param.default,\n      validate: (value) => {\n        if (param.required && !value) {\n          return 'This config value is required!'\n        }\n        return true\n      }\n    })\n  })\n\n  return inquirer.prompt(questions)\n}\n\nexport const updateSocket = async (socket, config) => {\n  debug(`updateSocket: ${socket.name}`)\n  const startTime = new Date().getTime()\n\n  try {\n    const updateStatus = await socket.update({ config })\n    const endTime = new Date().getTime()\n    if (updateStatus.status === 'ok') {\n      echon(4)(`${format.green('✓')} ${format.cyan(socket.name)} `)\n      echo(`successfully updated ${format.dim(endTime - startTime, 'ms')}`)\n    } else if (updateStatus.status === 'stopped') {\n      echon(4)(`${format.green('✓')} ${format.cyan(socket.name)} `)\n      echo(`successfully updated ${format.dim(endTime - startTime, 'ms')}`)\n    } else {\n      echon(4)(`${format.red('✗')} ${format.cyan(socket.name)} `)\n      echo(`update failed ${format.dim(endTime - startTime, 'ms')}`)\n      const errMsg = updateStatus.message.error\n      const lineNo = updateStatus.message.lineno\n      echon(4)(format.dim.red(errMsg))\n      if (lineNo) {\n        echo(format.dim(`line ${lineNo} of socket.yml`))\n      } else {\n        echo()\n      }\n      echo()\n    }\n    return updateStatus\n  } catch (err) {\n    error(err)\n  }\n}\n\nexport const updateConfig = async (socket, config) => {\n  echo()\n  echon(4)(`Updating Socket's ${format.cyan(socket.name)} config... `)\n\n  try {\n    const updateStatus = await socket.update({ config })\n    if (updateStatus === 'ok') {\n      echo(format.green('Done'))\n      echo()\n    } else {\n      echo()\n      error(4)(updateStatus)\n      echo()\n    }\n  } catch (err) {\n    if (typeof err === 'object' && err.errorType) {\n    } else {\n      error(err)\n    }\n  }\n}\n\nexport const socketNotFound = () => {\n  echo()\n  warning(4)('No Socket was found on server nor in config!')\n  echo()\n}\n"]}