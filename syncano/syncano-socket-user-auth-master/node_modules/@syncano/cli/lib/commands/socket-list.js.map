{"version":3,"sources":["../../src/commands/socket-list.js"],"names":["info","debug","SocketListCmd","constructor","context","session","Socket","responses","run","socketName","cmd","fullPrint","full","socket","get","existLocally","existRemotely","process","exit","printSocket","err","sockets","withDeps","flatList","list","printSockets","printEndpoint","endpoint","endpointResponses","name","description","url","notSynced","metadata","parameters","params","Object","keys","forEach","param","parameter","example","response","exampleKey","mimetype","exitCode","printEventHandler","eventHandler","handlerResponses","handler","printEvent","event","eventResponses","endpoints","getEndpoints","eventHandlers","getEventHandlers","events","getEvents","version","type","status","length","lackSockets","createNewOne","installNewOne"],"mappings":"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","file":"socket-list.js","sourcesContent":["import logger from '../utils/debug'\nimport { echo } from '../utils/print-tools'\nimport { socketNotFound } from './helpers/socket'\nimport responses from './socket-list-responses'\n\nconst { info, debug } = logger('cmd-socket-list')\n\nclass SocketListCmd {\n  constructor (context) {\n    info('SocketListCmd.constructor', context)\n    this.session = context.session\n    this.Socket = context.Socket\n    this.responses = responses(this.session)\n  }\n\n  async run ([socketName, cmd]) {\n    info('SocketListCmd.run')\n    this.fullPrint = cmd.full || !!socketName\n\n    if (socketName) {\n      try {\n        const socket = await this.Socket.get(socketName)\n        if (!socket.existLocally && !socket.existRemotely) {\n          socketNotFound()\n          process.exit(1)\n        }\n        this.printSocket(socket)\n      } catch (err) {\n        socketNotFound()\n        process.exit(1)\n      }\n    } else {\n      const sockets = cmd.withDeps ? await this.Socket.flatList() : await this.Socket.list()\n      this.printSockets(sockets)\n    }\n  }\n\n  printEndpoint (endpoint) {\n    const endpointResponses = this.responses.endpoint(endpoint)\n    echo(8)(endpointResponses.name)\n    echo(8)(endpointResponses.description)\n    echo(8)(endpointResponses.url)\n    if (!endpoint.existRemotely) {\n      echo(8)(endpointResponses.notSynced)\n    }\n    echo()\n\n    if (endpoint.metadata.parameters && this.fullPrint) {\n      echo(8)(this.responses.params)\n      echo()\n      Object.keys(endpoint.metadata.parameters).forEach((param) => {\n        echo(10)(endpointResponses.parameter(param).name)\n        echo(10)(endpointResponses.parameter(param).description)\n        echo(10)(endpointResponses.parameter(param).example)\n        echo()\n      })\n    }\n\n    const responses = endpoint.metadata.response\n\n    if (responses && this.fullPrint) {\n      echo(8)(this.responses.responses)\n      echo()\n      if (responses) {\n        Object.keys(responses).forEach(exampleKey => {\n          const example = responses[exampleKey]\n          echo(10)(endpointResponses.response(example).description)\n          echo(10)(endpointResponses.response(example).mimetype)\n          echo(10)(endpointResponses.response(example).exitCode)\n          echo(10)(endpointResponses.response(example).example)\n          echo()\n        })\n      }\n    }\n  }\n\n  printEventHandler (eventHandler) {\n    const metadata = eventHandler.metadata\n    const handlerResponses = this.responses.handler(eventHandler)\n\n    echo(8)(handlerResponses.name)\n    echo(8)(handlerResponses.description)\n    echo()\n\n    if (metadata.parameters && this.fullPrint) {\n      echo(12)(this.responses.params)\n      echo()\n      Object.keys(metadata.parameters).forEach((param) => {\n        echo(12)(handlerResponses.parameter(param).name)\n        echo(12)(handlerResponses.parameter(param).description)\n        echo(12)(handlerResponses.parameter(param).example)\n        echo()\n      })\n    }\n  }\n\n  printEvent (event) {\n    const eventResponses = this.responses.event(event)\n\n    echo(8)(eventResponses.name)\n    echo(8)(eventResponses.description)\n    echo()\n\n    if (event.metadata.parameters && this.fullPrint) {\n      echo(12)(this.responses.params)\n      echo()\n      Object.keys(event.metadata.parameters).forEach((param) => {\n        echo(12)(eventResponses.parameter(param).name)\n        echo(12)(eventResponses.parameter(param).description)\n        echo(12)(eventResponses.parameter(param).example)\n        echo()\n      })\n    }\n  }\n\n  async printSocket (socket) {\n    debug('printSocket')\n\n    const endpoints = socket.getEndpoints()\n    const eventHandlers = socket.getEventHandlers()\n    const events = socket.getEvents()\n\n    echo(4)(this.responses.socket(socket).name)\n    echo(4)(this.responses.socket(socket).description)\n    echo(4)(this.responses.socket(socket).version)\n    echo(4)(this.responses.socket(socket).type)\n    echo(4)(this.responses.socket(socket).status)\n    echo()\n\n    endpoints.forEach((endpoint) => this.printEndpoint(endpoint))\n    eventHandlers.forEach((eventHandler) => this.printEventHandler(eventHandler))\n    events.forEach((event) => this.printEvent(event))\n  }\n\n  printSockets (sockets) {\n    echo()\n    if (!sockets || sockets.length === 0) {\n      echo(4)(this.responses.lackSockets)\n      echo(4)(this.responses.createNewOne)\n      echo(4)(this.responses.installNewOne)\n      echo()\n\n      return process.exit()\n    }\n\n    sockets.forEach((socket) => this.printSocket(socket))\n    echo()\n  }\n}\n\nexport default SocketListCmd\n"]}