{"version":3,"sources":["../src/cli-instance.js"],"names":["setup","session","load","command","group","description","action","options","isAuthenticated","InstanceList","run","InstanceCreate","InstanceDelete","on","commandsArr","process","argv","slice","length","outputHelp","parse"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA;AAAA,+BAAQ,aAAY;AACxB,UAAM,kBAAQC,OAAR,CAAgBC,IAAhB,EAAN;;AAEA,sBACGC,OADH,CACW,MADX,EAEGC,KAFH,CAES,UAFT,EAGGC,WAHH,CAGe,yBAHf,EAIGC,MAJH;AAAA,oCAIU,WAAO,GAAGC,OAAV,EAAsB;AAC5B,0BAAQC,eAAR;AACA;AACA,YAAI,mBAASC,YAAb,oBAAmCC,GAAnC,CAAuCH,OAAvC;AACD,OARH;;AAAA;AAAA;AAAA;AAAA;;AAUA,sBACGJ,OADH,CACW,uBADX,EAEGC,KAFH,CAES,UAFT,EAGGC,WAHH,CAGe,oBAHf,EAIGC,MAJH;AAAA,oCAIU,WAAO,GAAGC,OAAV,EAAsB;AAC5B,0BAAQC,eAAR;AACA;AACA,YAAI,mBAASG,cAAb,oBAAqCD,GAArC,CAAyCH,OAAzC;AACD,OARH;;AAAA;AAAA;AAAA;AAAA;;AAUA,sBACGJ,OADH,CACW,uBADX,EAEGC,KAFH,CAES,UAFT,EAGGC,WAHH,CAGe,oBAHf,EAIGC,MAJH;AAAA,oCAIU,WAAO,GAAGC,OAAV,EAAsB;AAC5B,0BAAQC,eAAR;AACA;AACA,YAAI,mBAASI,cAAb,oBAAqCF,GAArC,CAAyCH,OAAzC;AACD,OARH;;AAAA;AAAA;AAAA;AAAA;;AAUA,sBACGM,EADH,CACM,GADN,EACW,UAACC,WAAD;AAAA,aAAiB,gCAAiBA,WAAjB,CAAjB;AAAA,KADX;;AAGA,QAAI,CAACC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC,MAA3B,EAAmC;AACjC,wBAAQC,UAAR;AACD;;AAED,sBAAQC,KAAR,CAAcL,QAAQC,IAAtB;AACD,GAzCK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AA2CAhB","file":"cli-instance.js","sourcesContent":["\nimport program from './program'\nimport commands from './commands'\nimport session from './utils/session'\nimport context from './utils/context'\nimport validateCommands from './utils/validate-commands'\nimport { echo } from './utils/print-tools'\n\nconst setup = async () => {\n  await context.session.load()\n\n  program\n    .command('list')\n    .group('Instance')\n    .description('List all your instances')\n    .action(async (...options) => {\n      session.isAuthenticated()\n      echo()\n      new commands.InstanceList(context).run(options)\n    })\n\n  program\n    .command('create <instanceName>')\n    .group('Instance')\n    .description('Create an Instance')\n    .action(async (...options) => {\n      session.isAuthenticated()\n      echo()\n      new commands.InstanceCreate(context).run(options)\n    })\n\n  program\n    .command('delete <instanceName>')\n    .group('Instance')\n    .description('Create an Instance')\n    .action(async (...options) => {\n      session.isAuthenticated()\n      echo()\n      new commands.InstanceDelete(context).run(options)\n    })\n\n  program\n    .on('*', (commandsArr) => validateCommands(commandsArr))\n\n  if (!process.argv.slice(2).length) {\n    program.outputHelp()\n  }\n\n  program.parse(process.argv)\n}\n\nsetup()\n"]}