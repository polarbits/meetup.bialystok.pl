{"version":3,"sources":["../../src/settings/socketSettings.js"],"names":["getSocketSettings","debug","SocketSettings","constructor","socketPath","socketName","name","baseDir","loaded","load","getHosting","hostingName","attributes","hosting","addHosting","params","deleteHosting","listHosting","length","hostings","list","key","Object","keys","push","src","getScripts","getFileForEndpoint","endpointName","endpoints","file","getConfigOptions","config","getConfig","configMetadata","forEach","value","default","getFull","getVersion","version","bumpVersion","bumpType","newVersion","inc","set","getDependencies","dependencies","addDependency","deps","save"],"mappings":"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","file":"socketSettings.js","sourcesContent":["import semver from 'semver'\nimport FindKey from 'find-key'\n\nimport logger from '../utils/debug'\nimport Settings from './settings'\n\nconst { debug } = logger('setting-socket')\n\nclass SocketSettings extends Settings {\n  constructor (socketPath, socketName) {\n    debug('SocketSettings.constructor', socketPath, socketName)\n    super()\n    this.name = 'socket'\n    this.baseDir = socketPath\n    this.loaded = this.load()\n  }\n\n  getHosting (hostingName) {\n    debug('getHosting()')\n    return this.attributes.hosting ? this.attributes.hosting[hostingName] : null\n  }\n\n  addHosting (hostingName, params) {\n    if (!this.attributes.hosting) this.attributes.hosting = {}\n    this.attributes.hosting[hostingName] = params\n  }\n\n  deleteHosting (hostingName) {\n    if (this.attributes.hosting) {\n      delete this.attributes.hosting[hostingName]\n    }\n\n    if (this.listHosting().length === 0) {\n      delete this.attributes.hosting\n    }\n  }\n\n  listHosting () {\n    debug('list()')\n    const hostings = this.attributes.hosting\n    const list = []\n    if (hostings) {\n      for (const key of Object.keys(hostings)) {\n        list.push({\n          name: key,\n          src: hostings[key].src\n        })\n      }\n    }\n    return list\n  }\n\n  getScripts () {\n    return FindKey(this.attributes, 'file')\n  }\n\n  getFileForEndpoint (endpointName) {\n    return this.attributes.endpoints[endpointName].file\n  }\n\n  getConfigOptions () {\n    return this.attributes.config || {}\n  }\n\n  getConfig () {\n    const config = {}\n    const configMetadata = this.getConfigOptions()\n    Object.keys(configMetadata).forEach((key) => {\n      if (configMetadata[key].value) {\n        config[key] = configMetadata[key].default\n      }\n    })\n    return config\n  }\n\n  getFull () {\n    return this.attributes\n  }\n\n  getVersion () {\n    return this.attributes.version || '0.0.0'\n  }\n\n  bumpVersion (bumpType) {\n    const newVersion = semver.inc(this.getVersion(), bumpType)\n    debug('newVersion', this.getVersion(), bumpType, newVersion)\n    this.set('version', newVersion, true)\n    return this.getVersion()\n  }\n\n  getDependencies () {\n    return this.attributes.dependencies || {}\n  }\n\n  addDependency (name, version) {\n    const deps = this.attributes.dependencies || {}\n    deps[name] = { version }\n    this.attributes.dependencies = deps\n    this.save()\n  }\n}\n\nexport default function getSocketSettings (socketPath, socketName) {\n  return new SocketSettings(socketPath, socketName)\n}\n"]}