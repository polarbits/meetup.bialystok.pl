{"version":3,"sources":["../../src/commands/socket-call.js"],"names":["SocketEndpointCall","constructor","context","session","Socket","validateValue","value","promptParamQuestion","params","param","description","paramType","type","dim","question","name","message","green","default","example","validate","listParams","endpointObj","metadata","parameters","paramsCount","Object","keys","length","questions","cyan","getFullName","forEach","push","formatResponse","res","bodyOnly","contentType","headers","grey","status","data","run","fullEndpointName","cmd","body","socketName","endpointName","match","socket","get","getEndpoint","existRemotely","askQuestions","config","prompt","call","err","response"],"mappings":"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","file":"socket-call.js","sourcesContent":["import format from 'chalk'\nimport inquirer from 'inquirer'\n\nimport {\n  echo,\n  echon,\n  error,\n  p,\n  printCode,\n  printSourceCode\n} from '../utils/print-tools'\n\nclass SocketEndpointCall {\n  constructor (context) {\n    this.context = context\n    this.session = context.session\n    this.Socket = context.Socket\n  }\n\n  static validateValue (value) {\n    if (!value) {\n      return 'We need this!'\n    }\n\n    return true\n  }\n\n  static promptParamQuestion (params, param) {\n    const description = params[param].description || ''\n    const paramType = params[param].type\n    echo(4)(`- ${param} ${format.dim(`(${paramType})`)} ${description}`)\n    const question = {\n      name: param,\n      message: p(2)(`Type in value for \"${format.green(param)}\" parameter`),\n      default: params[param].example,\n      validate: (value) => SocketEndpointCall.validateValue(value)\n    }\n    return question\n  }\n\n  static listParams (endpointObj) {\n    const params = endpointObj.metadata.parameters || {}\n    const paramsCount = Object.keys(params).length\n    const questions = []\n\n    if (!paramsCount) return questions\n\n    echo()\n    echon(4)(`You can pass ${format.cyan(paramsCount)} `)\n    echo(`parameter(s) to ${format.cyan(endpointObj.getFullName())} endpoint:`)\n    echo()\n\n    Object.keys(params).forEach((param) => {\n      questions.push(this.promptParamQuestion(params, param))\n    })\n    echo()\n\n    return questions\n  }\n\n  static formatResponse (res, bodyOnly) {\n    // Callback for the HTTP request response\n    const contentType = res.headers['content-type']\n\n    echo()\n    if (!bodyOnly) {\n      echo(4)(format.grey('statusCode:'), printCode(res.status))\n      echo(4)(format.grey('content-type:'), res.headers['content-type'])\n      echo(4)(format.grey('body:'))\n    }\n\n    echo()\n    echo(p(bodyOnly ? 0 : 4)(printSourceCode(contentType, res.data)))\n    echo()\n  }\n\n  async run ([fullEndpointName, cmd]) {\n    try {\n      const bodyOnly = cmd.body\n      const [, socketName, endpointName] = fullEndpointName.match(/([^/]*)\\/(.*)/)\n      const socket = await this.Socket.get(socketName)\n      const endpointObj = await socket.getEndpoint(endpointName)\n\n      if (endpointObj && endpointObj.existRemotely) {\n        const askQuestions = SocketEndpointCall.listParams(endpointObj)\n        let config = {}\n        if (askQuestions.length > 0) {\n          config = await inquirer.prompt(askQuestions) || {}\n        }\n        try {\n          const res = await endpointObj.call(config)\n          SocketEndpointCall.formatResponse(res, bodyOnly)\n        } catch (err) {\n          if (err.response) {\n            SocketEndpointCall.formatResponse(err.response)\n          } else {\n            error(err)\n          }\n        }\n      } else {\n        error('No such endpoint on the server! Make sure you have synced your socket.')\n      }\n    } catch (err) {\n      error(err)\n    }\n  }\n}\n\nexport default SocketEndpointCall\n"]}