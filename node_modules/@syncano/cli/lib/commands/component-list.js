'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _debug = require('../utils/debug');

var _debug2 = _interopRequireDefault(_debug);

var _printTools = require('../utils/print-tools');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

const { info, debug } = (0, _debug2.default)('cmd-component-list');

class ComponentList {
  constructor(context) {
    this.session = context.session;
    this.Socket = context.Socket;
    this.Component = context.Component;
  }

  run([projetPath, cmd]) {
    var _this = this;

    return _asyncToGenerator(function* () {
      info('ComponentLink.run');

      const sockets = yield _this.Socket.listLocal();
      sockets.forEach((() => {
        var _ref = _asyncToGenerator(function* (socket) {
          const components = yield _this.Socket.getLocal(socket).getComponents();
          components.forEach(function (component) {
            _this.printComponent(component);
          });
        });

        return function (_x) {
          return _ref.apply(this, arguments);
        };
      })());
    })();
  }

  printComponent(component) {
    return _asyncToGenerator(function* () {
      debug('printComponent');
      const metadata = component.metadata;

      (0, _printTools.echo)(4)(`${_chalk2.default.cyan.bold('name')}: ${_chalk2.default.cyan.bold(component.packageName)}`);
      (0, _printTools.echo)(4)(`${_chalk2.default.dim('socket')}: ${component.socketName}`);

      if (metadata.parameters) {
        (0, _printTools.echo)();
        Object.keys(metadata.parameters).forEach(function (paramName) {
          const paramObj = metadata.parameters[paramName];
          (0, _printTools.echo)(8)(`${_chalk2.default.dim('name')}: ${_chalk2.default.cyan(paramName) || ''}`);
          (0, _printTools.echo)(8)(`${_chalk2.default.dim('description')}: ${paramObj.description}`);
          (0, _printTools.echo)(8)(`${_chalk2.default.dim('example')}: ${paramObj.example}`);
          (0, _printTools.echo)();
        });
      }
      (0, _printTools.echo)();
    })();
  }
}
exports.default = ComponentList;
module.exports = exports['default'];
//# sourceMappingURL=component-list.js.map