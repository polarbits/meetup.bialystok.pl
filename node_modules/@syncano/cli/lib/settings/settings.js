'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _jsYaml = require('js-yaml');

var _jsYaml2 = _interopRequireDefault(_jsYaml);

var _debug = require('../utils/debug');

var _debug2 = _interopRequireDefault(_debug);

var _errorResponse = require('../utils/error-response');

var _errorResponse2 = _interopRequireDefault(_errorResponse);

var _printTools = require('../utils/print-tools');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const { warn, info, debug } = (0, _debug2.default)('settings');

class Settings {
  constructor() {
    this.attributes = {};
    this.configPath = null;
  }

  load() {
    this.configPath = _path2.default.join(this.baseDir, `${this.name}.yml`);

    try {
      _fs2.default.accessSync(this.baseDir);
    } catch (err) {
      return false;
    }

    info(`Loading ${this.name} - ${this.configPath}`);

    try {
      info(`Checking: ${this.configPath}`);
      _fs2.default.accessSync(this.configPath, _fs2.default.R_OK);
    } catch (err) {
      warn('Config doesn\'t exist!');
      return false;
    }

    try {
      this.attributes = _jsYaml2.default.load(_fs2.default.readFileSync(this.configPath, 'utf8')) || {};
    } catch (err) {
      (0, _printTools.error)(err, (0, _printTools.p)(10)(`at file: ${this.configPath}`));
      process.exit(1);
    }

    return true;
  }

  save() {
    debug(`Saving ${this.configPath}`);
    try {
      _fs2.default.writeFileSync(this.configPath, _jsYaml2.default.dump(this.attributes));
    } catch (err) {
      return new _errorResponse2.default(this).handle(err);
    }
  }

  get(key) {
    return this.attributes[key] || null;
  }

  set(key, value, save) {
    this.attributes[key] = value;
    if (save !== false) this.save();
    return this;
  }
}
exports.default = Settings;
module.exports = exports['default'];
//# sourceMappingURL=settings.js.map